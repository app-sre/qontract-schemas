---
$schema: /app-interface/graphql-schemas-1.yml

confs:
- name: AppInterfaceSettings_v1
  fields:
  - { name: schema, type: string, isRequired: true }
  - { name: path, type: string, isRequired: true }
  - { name: labels, type: json }
  - { name: name, type: string, isRequired: true }
  - { name: description, type: string, isRequired: true }
  - { name: repoUrl, type: string, isRequired: true }
  - { name: vault, type: boolean, isRequired: true }
  - { name: kubeBinary, type: string, isRequired: true }
  - { name: mergeRequestGateway, type: string }
  - { name: saasDeployJobTemplate, type: string, isRequired: true }
  - { name: hashLength, type: int, isRequired: true }
  - { name: smtp, type: SmtpSettings_v1 }
  - { name: imap, type: ImapSettings_v1 }
  - { name: githubRepoInvites, type: GithubRepoInvites_v1 }
  - { name: dependencies, type: AppInterfaceDependencyMapping_v1, isList: true }
  - { name: credentials, type: CredentialsRequestMap_v1, isList: true }
  - { name: sqlQuery, type: SqlQuerySettings_v1 }
  - { name: pushGatewayCluster, type: Cluster_v1 }
  - { name: alertingServices, type: string, isList: true }
  - { name: endpointMonitoringBlackboxExporterModules, type: string, isList: true }
  - { name: ldap, type: LdapSettings_v1, isRequired: false}
  - { name: jiraWatcher, type: JiraWatcherSettings_v1, isRequired: false}
  - { name: glitchtip, type: GlitchtipSettings_v1, isRequired: false}

- name: SmtpSettings_v1
  fields:
  - { name: mailAddress, type: string, isRequired: true }
  - { name: timeout, type: int }
  - { name: credentials, type: VaultSecret_v1, isRequired: true }

- name: ImapSettings_v1
  fields:
  - { name: timeout, type: int }
  - { name: credentials, type: VaultSecret_v1, isRequired: true }

- name: GithubRepoInvites_v1
  fields:
  - { name: credentials, type: VaultSecret_v1, isRequired: true }

- name: LdapSettings_v1
  fields:
  - { name: serverUrl, type: string, isRequired: true }
  - { name: baseDn, type: string, isRequired: true }

- name: JiraWatcherSettings_v1
  fields:
  - { name: readTimeout, type: int, isRequired: true }
  - { name: connectTimeout, type: int, isRequired: true }

- name: GlitchtipSettings_v1
  fields:
  - { name: readTimeout, type: int }
  - { name: maxRetries, type: int }
  - { name: mailDomain, type: string }

- name: AppInterfaceDependencyMapping_v1
  fields:
  - { name: type, type: string, isRequired: true }
  - { name: services, type: Dependency_v1, isRequired: true, isList: true }

- name: CredentialsRequestMap_v1
  fields:
  - { name: name, type: string, isRequired: true }
  - { name: secret, type: VaultSecret_v1, isRequired: true }

- name: CredentialsRequest_v1
  fields:
  - { name: schema, type: string, isRequired: true }
  - { name: path, type: string, isRequired: true }
  - { name: labels, type: json }
  - { name: name, type: string, isRequired: true }
  - { name: description, type: string, isRequired: true }
  - { name: user, type: User_v1, isRequired: true }
  - { name: credentials, type: string, isRequired: true }

- name: SqlQuerySettings_v1
  fields:
  - { name: imageRepository, type: string, isRequired: true }
  - { name: pullSecret, type: NamespaceOpenshiftResourceVaultSecret_v1, isRequired: true }

- name: AppInterfaceEmail_v1
  fields:
  - { name: schema, type: string, isRequired: true }
  - { name: path, type: string, isRequired: true }
  - { name: labels, type: json }
  - { name: name, type: string, isRequired: true }
  - { name: subject, type: string, isRequired: true }
  - { name: to, type: AppInterfaceEmailAudience_v1, isRequired: true }
  - { name: body, type: string, isRequired: true }

- name: AppInterfaceEmailAudience_v1
  fields:
  - { name: aliases, type: string, isList: true }
  - { name: services, type: App_v1, isList: true }
  - { name: clusters, type: Cluster_v1, isList: true }
  - { name: namespaces, type: Namespace_v1, isList: true }
  - { name: aws_accounts, type: AWSAccount_v1, isList: true }
  - { name: roles, type: Role_v1, isList: true }
  - { name: users, type: User_v1, isList: true }

- name: AppInterfaceSlackNotification_v1
  fields:
  - { name: schema, type: string, isRequired: true }
  - { name: path, type: string, isRequired: true }
  - { name: labels, type: json }
  - { name: name, type: string, isRequired: true }
  - { name: subject, type: string, isRequired: true }
  - { name: channel, type: string }
  - { name: to, type: AppInterfaceSlackNotificationAudience_v1, isRequired: true }
  - { name: body, type: string, isRequired: true }

- name: AppInterfaceSlackNotificationAudience_v1
  fields:
  - { name: users, type: string, isList: true }

- name: VaultAuditOptions_v1
  isInterface: true
  interfaceResolve:
    strategy: fieldMap
    field: _type
    fieldMap:
      file: VaultAuditOptionsFile_v1
  fields:
  - { name: _type, type: string, isRequired: true }

- name: VaultAuditOptionsFile_v1
  interface: VaultAuditOptions_v1
  fields:
  - { name: _type, type: string, isRequired: true }
  - { name: file_path, type: string, isRequired: true }
  - { name: log_raw, type: string, isRequired: true }
  - { name: hmac_accessor, type: string, isRequired: true }
  - { name: mode, type: string, isRequired: true }
  - { name: format, type: string, isRequired: true }
  - { name: prefix, type: string, isRequired: true }

- name: VaultAudit_v1
  fields:
  - { name: _path, type: string, isRequired: true }
  - { name: type, type: string, isRequired: true }
  - { name: instance, type: VaultInstance_v1, isRequired: true }
  - { name: description, type: string, isRequired: true }
  - { name: options, type: VaultAuditOptions_v1, isInterface: true, isRequired: true }

- name: VaultAuthConfig_v1
  isInterface: true
  interfaceResolve:
    strategy: fieldMap
    field: _type
    fieldMap:
      github: VaultAuthConfigGithub_v1
      oidc: VaultAuthConfigOidc_v1
      kubernetes: VaultAuthConfigKubernetes_v1
  fields:
  - { name: _type, type: string, isRequired: true }

- name: VaultAuthConfigGithub_v1
  interface: VaultAuthConfig_v1
  fields:
  - { name: _type, type: string, isRequired: true }
  - { name: organization, type: string, isRequired: true }
  - { name: base_url, type: string, isRequired: true }
  - { name: max_ttl, type: string, isRequired: true }
  - { name: ttl, type: string, isRequired: true }

- name: VaultAuthConfigOidc_v1
  interface: VaultAuthConfig_v1
  fields:
  - { name: _type, type: string, isRequired: true }
  - { name: oidc_discovery_url, type: string, isRequired: true }
  - { name: oidc_client_id, type: string, isRequired: true }
  - { name: oidc_client_secret, type: VaultSecret_v1, isRequired: true }
  - { name: oidc_client_secret_kv_version, type: string, isRequired: true }
  - { name: default_role, type: string, isRequired: true}

- name: VaultAuthConfigKubernetes_v1
  interface: VaultAuthConfig_v1
  fields:
  - { name: _type, type: string, isRequired: true }
  - { name: kubernetes_host, type: string, isRequired: true }

- name: VaultAuthSettings_v1
  fields:
  - { name: config, type: VaultAuthConfig_v1, isInterface: true, isRequired: true }

- name: VaultSecretEngineOptions_v1
  isInterface: true
  interfaceResolve:
    strategy: fieldMap
    field: _type
    fieldMap:
      kv: VaultSecretEngineOptionsKV_v1
  fields:
  - { name: _type, type: string, isRequired: true }

- name: VaultSecretEngineOptionsKV_v1
  interface: VaultSecretEngineOptions_v1
  fields:
  - { name: _type, type: string, isRequired: true }
  - { name: version, type: string, isRequired: true }

- name: VaultSecretEngine_v1
  fields:
  - { name: _path, type: string, isRequired: true }
  - { name: type, type: string, isRequired: true }
  - { name: description, type: string, isRequired: true }
  - { name: instance, type: VaultInstance_v1, isRequired: true }
  - { name: options, type: VaultSecretEngineOptions_v1, isInterface: true }

- name: VaultRoleOptions_v1
  isInterface: true
  interfaceResolve:
    strategy: fieldMap
    field: _type
    fieldMap:
      approle: VaultApproleOptions_v1
      oidc: VaultRoleOidcOptions_v1
      kubernetes: VaultRoleKubernetesOptions_v1
  fields:
  - { name: _type, type: string, isRequired: true }

- name: VaultApproleOptions_v1
  interface: VaultRoleOptions_v1
  fields:
  - { name: _type, type: string, isRequired: true }
  - { name: bind_secret_id, type: string, isRequired: true }
  - { name: local_secret_ids, type: string, isRequired: true }
  - { name: token_period, type: string, isRequired: true }
  - { name: secret_id_num_uses, type: string, isRequired: true }
  - { name: secret_id_ttl, type: string, isRequired: true }
  - { name: token_explicit_max_ttl, type: string, isRequired: true }
  - { name: token_max_ttl, type: string, isRequired: true }
  - { name: token_no_default_policy, type: boolean, isRequired: true }
  - { name: token_num_uses, type: string, isRequired: true }
  - { name: token_ttl, type: string, isRequired: true }
  - { name: token_type, type: string, isRequired: true }
  - { name: token_policies, type: string, isList: true, isRequired: true }
  - { name: policies, type: string, isList: true, isRequired: true }
  - { name: secret_id_bound_cidrs, type: string, isList: true, isRequired: true }
  - { name: token_bound_cidrs, type: string, isList: true, isRequired: true }

- name: VaultRoleOidcOptions_v1
  interface: VaultRoleOptions_v1
  fields:
  - { name: _type, type: string, isRequired: true }
  - { name: allowed_redirect_uris, type: string, isList: true, isRequired: true }
  - { name: bound_audiences, type: string, isList: true }
  - { name: bound_claims, type: json }
  - { name: bound_claims_type, type: string }
  - { name: bound_subject, type: string }
  - { name: claim_mappings, type: json }
  - { name: clock_skew_leeway, type: string }
  - { name: expiration_leeway, type: string }
  - { name: groups_claim, type: string }
  - { name: max_age, type: string }
  - { name: not_before_leeway, type: string }
  - { name: oidc_scopes, type: string, isList: true }
  - { name: role_type, type: string, isRequired: true }
  - { name: token_ttl, type: string, isRequired: true }
  - { name: token_max_ttl, type: string, isRequired: true }
  - { name: token_explicit_max_ttl, type: string, isRequired: true }
  - { name: token_type, type: string, isRequired: true }
  - { name: token_period, type: string, isRequired: true }
  - { name: token_policies, type: string, isList: true, isRequired: true }
  - { name: token_bound_cidrs, type: string, isList: true, isRequired: true }
  - { name: token_no_default_policy, type: boolean, isRequired: true }
  - { name: token_num_uses, type: string, isRequired: true }
  - { name: user_claim, type: string, isRequired: true }
  - { name: verbose_oidc_logging, type: boolean }

- name: VaultRoleKubernetesOptions_v1
  interface: VaultRoleOptions_v1
  fields:
  - { name: _type, type: string, isRequired: true }
  - { name: alias_name_source, type: string, isRequired: true }
  - { name: audience, type: string }
  - { name: bound_service_account_names, type: string, isList: true, isRequired: true }
  - { name: bound_service_account_namespaces, type: string, isList: true, isRequired: true }
  - { name: token_ttl, type: string, isRequired: true }
  - { name: token_max_ttl, type: string, isRequired: true }
  - { name: token_explicit_max_ttl, type: string, isRequired: true }
  - { name: token_type, type: string, isRequired: true }
  - { name: token_period, type: string, isRequired: true }
  - { name: token_policies, type: string, isList: true, isRequired: true }
  - { name: token_bound_cidrs, type: string, isList: true, isRequired: true }
  - { name: token_no_default_policy, type: boolean, isRequired: true }
  - { name: token_num_uses, type: string, isRequired: true }

- name: VaultRole_v1
  fields:
  - { name: name, type: string, isRequired: true }
  - { name: type, type: string, isRequired: true }
  - { name: mount, type: string, isRequired: true }
  - { name: instance, type: VaultInstance_v1, isRequired: true }
  - { name: output_path, type: string, isRequired: false }
  - { name: options, type: VaultRoleOptions_v1, isInterface: true, isRequired: true }

- name: VaultPolicy_v1
  fields:
  - { name: name, type: string, isRequired: true }
  - { name: instance, type: VaultInstance_v1, isRequired: true }
  - { name: rules, type: string, isRequired: true }

- name: Resource_v1
  fields:
  - { name: path, type: string, isRequired: true }
  - { name: content, type: string, isRequired: true }
  - { name: sha256sum, type: string, isRequired: true }
  - { name: schema, type: string }
  - { name: backrefs, type: ResourceBackref_v1, isList: true }

- name: ResourceBackref_v1
  fields:
  - { name: path, type: string, isRequired: true }
  - { name: datafileSchema, type: string, isRequired: true }
  - { name: type, type: string, isRequired: true }
  - { name: jsonpath, type: string, isRequired: true }

- name: DatafileObject_v1
  isInterface: true
  interfaceResolve:
    strategy: schema
  fields:
  - { name: path, type: string, isRequired: true }
  - { name: schema, type: string, isRequired: true }

- name: VaultSecret_v1
  fields:
  - { name: path, type: string, isRequired: true }
  - { name: field, type: string, isRequired: true }
  - { name: format, type: string }
  - { name: version, type: int }

- name: KeyValue_v1
  fields:
  - { name: key, type: string, isRequired: true }
  - { name: value, type: string, isRequired: true }

- name: ClusterJumpHost_v1
  fields:
  - { name: hostname, type: string, isRequired: true, isUnique: true, isSearchable: true }
  - { name: knownHosts, type: string, isRequired: true, isResource: true }
  - { name: user, type: string, isRequired: true }
  - { name: port, type: int }
  - { name: remotePort, type: int }
  - { name: identity, type: VaultSecret_v1, isRequired: true }
  - name: clusters
    type: Cluster_v1
    isList: true
    synthetic:
      schema: /openshift/cluster-1.yml
      subAttr: jumpHost

- name: DisableClusterAutomations_v1
  fields:
  - { name: integrations, type: string, isList: true }
  - { name: e2eTests, type: string, isList: true }

- name: GcpProject_v1
  interface: ExternalResourcesProvisioner_v1
  fields:
  - { name: schema, type: string, isRequired: true }
  - { name: path, type: string, isRequired: true }
  - { name: labels, type: json }
  - { name: name, type: string, isRequired: true }
  - { name: description, type: string, isRequired: true }
  - { name: managedTeams, type: string, isList: true, isRequired: true }
  - { name: automationToken, type: VaultSecret_v1 }
  - { name: pushCredentials, type: VaultSecret_v1 }

- name: GrafanaDashboardUrls_v1
  fields:
  - { name: title, type: string, isRequired: true}
  - { name: url, type: string, isRequired: true}

- name: QuayOrg_v1
  datafile: /dependencies/quay-org-1.yml
  fields:
  - { name: schema, type: string, isRequired: true }
  - { name: path, type: string, isRequired: true }
  - { name: labels, type: json }
  - { name: name, type: string, isRequired: true }
  - { name: description, type: string, isRequired: true }
  - { name: mirror, type: QuayOrg_v1 }
  - { name: mirrorFilters, type: QuayOrgMirrorFilter_v1, isList: true }
  - { name: managedRepos, type: boolean, isRequired: true }
  - { name: instance, type: QuayInstance_v1, isRequired: true }
  - { name: serverUrl, type: string }
  - { name: managedTeams, type: string, isList: true, isRequired: true }
  - { name: automationToken, type: VaultSecret_v1 }
  - { name: pushCredentials, type: VaultSecret_v1 }

- name: QuayOrgMirrorFilter_v1
  fields:
  - { name: name, type: string, isRequired: true }
  - { name: tags, type: string, isList: true }
  - { name: tagsExclude, type: string, isList: true }

- name: QuayInstance_v1
  fields:
  - { name: schema, type: string, isRequired: true }
  - { name: path, type: string, isRequired: true }
  - { name: labels, type: json }
  - { name: name, type: string, isRequired: true }
  - { name: description, type: string, isRequired: true }
  - { name: url, type: string, isRequired: true }

- name: JenkinsInstanceBuildsCleanupRules_v1
  fields:
  - { name: name, type: string, isRequired: true }
  - { name: keep_hours, type: int, isRequired: true }

- name: JenkinsWorkerFleets_v1
  fields:
  - { name: account, type: string, isRequired: true }
  - { name: identifier, type: string, isRequired: true }
  - { name: namespace, type: Namespace_v1, isRequired: true }
  - { name: credentialsId, type: string, isRequired: true }
  - { name: fsRoot, type: string }
  - { name: labelString, type: string, isRequired: true }
  - { name: numExecutors, type: int }
  - { name: idleMinutes, type: int }
  - { name: minSpareSize, type: int }
  - { name: noDelayProvision, type: boolean }

- name: JenkinsInstance_v1
  fields:
  - { name: schema, type: string, isRequired: true }
  - { name: path, type: string, isRequired: true }
  - { name: labels, type: json }
  - { name: name, type: string, isRequired: true }
  - { name: description, type: string, isRequired: true }
  - { name: serverUrl, type: string, isRequired: true }
  - { name: token, type: VaultSecret_v1, isRequired: true }
  - { name: previousUrls, type: string, isList: true }
  - { name: plugins, type: string, isList: true }
  - { name: deleteMethod, type: string }
  - { name: managedProjects, type: string, isList: true }
  - { name: buildsCleanupRules, type: JenkinsInstanceBuildsCleanupRules_v1, isList: true }
  - { name: workerFleets, type: JenkinsWorkerFleets_v1, isList: true }

- name: JenkinsConfig_v1
  datafile: /dependencies/jenkins-config-1.yml
  fields:
  - { name: schema, type: string, isRequired: true }
  - { name: path, type: string, isRequired: true }
  - { name: labels, type: json }
  - { name: name, type: string, isRequired: true }
  - { name: description, type: string, isRequired: true }
  - { name: app, type: App_v1, isRequired: true }
  - { name: instance, type: JenkinsInstance_v1, isRequired: true }
  - { name: type, type: string, isRequired: true }
  - { name: config, type: json }
  - { name: config_path, type: string, isResource: true, resolveResource: true }

- name: JiraServer_v1
  fields:
  - { name: schema, type: string, isRequired: true }
  - { name: path, type: string, isRequired: true }
  - { name: labels, type: json }
  - { name: name, type: string, isRequired: true }
  - { name: description, type: string, isRequired: true }
  - { name: serverUrl, type: string, isRequired: true }
  - { name: token, type: VaultSecret_v1, isRequired: true }

- name: SeverityPriorityMapping_v1
  fields:
  - { name: severity, type: string, isRequired: true }
  - { name: priority, type: string, isRequired: true }

- name: JiraSeverityPriorityMappings_v1
  fields:
  - { name: schema, type: string, isRequired: true }
  - { name: path, type: string, isRequired: true }
  - { name: labels, type: json }
  - { name: name, type: string, isRequired: true }
  - { name: description, type: string, isRequired: true }
  - { name: mappings, type: SeverityPriorityMapping_v1, isList: true, isRequired: true }

- name: JiraBoard_v1
  datafile: /dependencies/jira-board-1.yml
  fields:
  - { name: schema, type: string, isRequired: true }
  - { name: path, type: string, isRequired: true }
  - { name: labels, type: json }
  - { name: name, type: string, isRequired: true, isUnique: true, isSearchable: true }
  - { name: description, type: string, isRequired: true }
  - { name: server, type: JiraServer_v1, isRequired: true }
  - { name: severityPriorityMappings, type: JiraSeverityPriorityMappings_v1, isRequired: true }
  - { name: slack, type: SlackOutput_v1 }
  - { name: issueResolveState, type: string }
  - { name: issueReopenState, type: string }

- name: SendGridAccount_v1
  fields:
  - { name: schema, type: string, isRequired: true }
  - { name: path, type: string, isRequired: true }
  - { name: labels, type: json }
  - { name: name, type: string, isRequired: true, isUnique: true }
  - { name: description, type: string, isRequired: true }
  - { name: token, type: VaultSecret_v1, isRequired: true }

- name: SlackWorkspace_v1
  fields:
  - { name: schema, type: string, isRequired: true }
  - { name: path, type: string, isRequired: true }
  - { name: labels, type: json }
  - { name: name, type: string, isRequired: true }
  - { name: description, type: string, isRequired: true }
  - { name: token, type: VaultSecret_v1, isRequired: true }
  - { name: api_client, type: SlackWorkspaceApiClient_v1 }
  - { name: integrations, type: SlackWorkspaceIntegration_v1, isList: true}
  - { name: managedUsergroups, type: string, isList: true, isRequired: true }

- name: SlackWorkspaceApiClient_v1
  fields:
  - { name: global, type: SlackWorkspaceApiClientGlobalConfig_v1 }
  - { name: methods, type: SlackWorkspaceApiClientMethodConfig_v1, isList: true }

- name: SlackWorkspaceApiClientGlobalConfig_v1
  fields:
  - { name: max_retries, type: int }
  - { name: timeout, type: int }

- name: SlackWorkspaceApiClientMethodConfig_v1
  fields:
  - { name: name, type: string, isRequired: true }
  - { name: args, type: json, isRequired: true }

- name: SlackWorkspaceIntegration_v1
  fields:
  - { name: name, type: string, isRequired: true }
  - { name: token, type: VaultSecret_v1, isRequired: true }
  - { name: channel, type: string, isRequired: true }
  - { name: icon_emoji, type: string, isRequired: true }
  - { name: username, type: string, isRequired: true }

- name: GithubOrg_v1
  fields:
  - { name: schema, type: string, isRequired: true }
  - { name: path, type: string, isRequired: true }
  - { name: labels, type: json }
  - { name: name, type: string, isRequired: true }
  - { name: description, type: string, isRequired: true }
  - { name: url, type: string, isRequired: true }
  - { name: two_factor_authentication, type: boolean, isRequired: true }
  - { name: default, type: boolean }
  - { name: token, type: VaultSecret_v1, isRequired: true }
  - { name: managedTeams, type: string, isList: true, isRequired: false }

- name: GitlabProjects_v1
  fields:
  - { name: group, type: string, isRequired: true }
  - { name: projects, type: string, isList: true, isRequired: true }

- name: GitlabInstance_v1
  fields:
  - { name: schema, type: string, isRequired: true }
  - { name: path, type: string, isRequired: true }
  - { name: labels, type: json }
  - { name: name, type: string, isRequired: true }
  - { name: description, type: string, isRequired: true }
  - { name: backupOrgs, type: string, isList: true }
  - { name: managedGroups, type: string, isList: true, isRequired: true }
  - { name: projectRequests, type: GitlabProjects_v1, isList: true }
  - { name: url, type: string, isRequired: true }
  - { name: token, type: VaultSecret_v1, isRequired: true }
  - { name: sslVerify, type: boolean }

- name: PagerDutyInstance_v1
  fields:
  - { name: schema, type: string, isRequired: true }
  - { name: path, type: string, isRequired: true }
  - { name: labels, type: json }
  - { name: name, type: string, isRequired: true }
  - { name: description, type: string, isRequired: true }
  - { name: token, type: VaultSecret_v1, isRequired: true }

- name: PagerDutyTarget_v1
  fields:
  - { name: schema, type: string, isRequired: true }
  - { name: path, type: string, isRequired: true }
  - { name: labels, type: json }
  - { name: name, type: string, isRequired: true }
  - { name: description, type: string, isRequired: true }
  - { name: instance, type: PagerDutyInstance_v1, isRequired: true }
  - { name: scheduleID, type: string }
  - { name: escalationPolicyID, type: string }

- name: ClusterAuth_v1
  isInterface: true
  interfaceResolve:
    strategy: fieldMap
    field: service
    fieldMap:
      github-org: ClusterAuthGithubOrg_v1
      github-org-team: ClusterAuthGithubOrgTeam_v1
      oidc: ClusterAuthOIDC_v1
  fields:
  - { name: service, type: string, isRequired: true }

- name: ClusterAuthGithubOrg_v1
  interface: ClusterAuth_v1
  fields:
  - { name: service, type: string, isRequired: true }
  - { name: org, type: string, isRequired: true }

- name: ClusterAuthGithubOrgTeam_v1
  interface: ClusterAuth_v1
  fields:
  - { name: service, type: string, isRequired: true }
  - { name: org, type: string, isRequired: true }
  - { name: team, type: string, isRequired: true }

- name: ClusterAuthOIDC_v1
  interface: ClusterAuth_v1
  fields:
  - { name: service, type: string, isRequired: true }
  - { name: name, type: string, isRequired: true }
  - { name: issuer, type: string }
  - { name: claims, type: ClusterAuthOIDCClaims_v1 }

- name: ClusterAuthOIDCClaims_v1
  fields:
  - { name: email, type: string, isList: true }
  - { name: username, type: string, isList: true }
  - { name: name, type: string, isList: true }
  - { name: groups, type: string, isList: true }

- name: KafkaClusterSpec_v1
  fields:
  - { name: provider, type: string, isRequired: true }
  - { name: region, type: string, isRequired: true }
  - { name: multi_az, type: boolean, isRequired: true }

- name: ClusterSpec_v1
  isInterface: true
  interfaceResolve:
    strategy: fieldMap
    field: product
    fieldMap:
      osd: ClusterSpecOSD_v1
      rosa: ClusterSpecROSA_v1
  fields:
  - { name: product, type: string, isRequired: true}
  - { name: id, type: string }
  - { name: external_id, type: string }
  - { name: provider, type: string, isRequired: true }
  - { name: region, type: string, isRequired: true }
  - { name: channel, type: string, isRequired: true }
  - { name: version, type: string, isRequired: true }
  - { name: initial_version, type: string, isRequired: true }
  - { name: multi_az, type: boolean, isRequired: true }
  - { name: nodes, type: int }
  - { name: instance_type, type: string, isRequired: true }
  - { name: private, type: boolean, isRequired: true }
  - { name: provision_shard_id, type: string }
  - { name: autoscale, type: ClusterSpecAutoScale_v1 }
  - { name: disable_user_workload_monitoring, type: boolean }
  - { name: hypershift, type: boolean, isRequired: false}

- name: ClusterSpecOSD_v1
  interface: ClusterSpec_v1
  fields:
  - { name: product, type: string, isRequired: true}
  - { name: id, type: string }
  - { name: external_id, type: string }
  - { name: provider, type: string, isRequired: true }
  - { name: region, type: string, isRequired: true }
  - { name: channel, type: string, isRequired: true }
  - { name: version, type: string, isRequired: true }
  - { name: initial_version, type: string, isRequired: true }
  - { name: multi_az, type: boolean, isRequired: true }
  - { name: nodes, type: int }
  - { name: instance_type, type: string, isRequired: true }
  - { name: private, type: boolean, isRequired: true }
  - { name: provision_shard_id, type: string }
  - { name: autoscale, type: ClusterSpecAutoScale_v1 }
  - { name: disable_user_workload_monitoring, type: boolean }
  - { name: hypershift, type: boolean, isRequired: false}
  - { name: storage, type: int, isRequired: true }
  - { name: load_balancers, type: int, isRequired: true }

- name: ClusterSpecROSA_v1
  interface: ClusterSpec_v1
  fields:
  - { name: account, type: AWSAccount_v1}
  - { name: product, type: string, isRequired: true}
  - { name: id, type: string }
  - { name: external_id, type: string }
  - { name: provider, type: string, isRequired: true }
  - { name: region, type: string, isRequired: true }
  - { name: channel, type: string, isRequired: true }
  - { name: version, type: string, isRequired: true }
  - { name: initial_version, type: string, isRequired: true }
  - { name: multi_az, type: boolean, isRequired: true }
  - { name: nodes, type: int }
  - { name: instance_type, type: string, isRequired: true }
  - { name: private, type: boolean, isRequired: true }
  - { name: provision_shard_id, type: string }
  - { name: autoscale, type: ClusterSpecAutoScale_v1 }
  - { name: disable_user_workload_monitoring, type: boolean }
  - { name: hypershift, type: boolean, isRequired: false}
  - { name: subnet_ids, type: string, isList: True}
  - { name: availability_zones, type: string, isList: True}


- name: ClusterSpecAutoScale_v1
  fields:
  - { name: min_replicas, type: int, isRequired: true }
  - { name: max_replicas, type: int, isRequired: true }

- name: ClusterExternalConfiguration_v1
  fields:
  - { name: labels, type: json, isRequired: true }

- name: ClusterAdditionalRouter_v1
  fields:
  - { name: private, type: boolean, isRequired: true }
  - { name: route_selectors, type: json }

- name: ClusterUpgradePolicyConditions_v1
  fields:
  - { name: soakDays, type: int }
  - { name: mutexes, type: string, isList: true }
  - { name: sector, type: string }

- name: ClusterUpgradePolicy_v1
  fields:
  - { name: schedule_type, type: string } # deprecated
  - { name: schedule, type: string, isRequired: true }
  - { name: workloads, type: string, isList: true, isRequired: true }
  - { name: conditions, type: ClusterUpgradePolicyConditions_v1, isRequired: true }

- name: ClusterNetwork_v1
  fields:
  - { name: type, type: string }
  - { name: vpc, type: string, isRequired: true }
  - { name: service, type: string, isRequired: true }
  - { name: pod, type: string, isRequired: true }

- name: ClusterMachinePool_v1
  fields:
  - { name: id, type: string, isRequired: true }
  - { name: instance_type, type: string, isRequired: true }
  - { name: replicas, type: int, isRequired: true }
  - { name: labels, type: json }
  - { name: taints, type: Taint_v1, isList: true }

- name: Taint_v1
  fields:
  - { name: key, type: string, isRequired: true }
  - { name: value, type: string, isRequired: true }
  - { name: effect, type: string, isRequired: true }

- name: ClusterPeeringConnection_v1
  isInterface: true
  interfaceResolve:
    strategy: fieldMap
    field: provider
    fieldMap:
      account-vpc: ClusterPeeringConnectionAccount_v1
      account-vpc-mesh: ClusterPeeringConnectionAccountVPCMesh_v1
      account-tgw: ClusterPeeringConnectionAccountTGW_v1
      cluster-vpc-requester: ClusterPeeringConnectionClusterRequester_v1
      cluster-vpc-accepter: ClusterPeeringConnectionClusterAccepter_v1
  fields:
  - { name: provider, type: string, isRequired: true }
  - { name: name, type: string, isRequired: true }
  - { name: description, type: string }
  - { name: manageRoutes, type: boolean }
  - { name: delete, type: boolean }

- name: ClusterPeeringConnectionAccount_v1
  interface: ClusterPeeringConnection_v1
  fields:
  - { name: provider, type: string, isRequired: true }
  - { name: name, type: string, isRequired: true }
  - { name: vpc, type: AWSVPC_v1, isRequired: true }
  - { name: description, type: string }
  - { name: manageRoutes, type: boolean }
  - { name: manageAccountRoutes, type: boolean }
  - { name: delete, type: boolean }
  - { name: assumeRole, type: string }

- name: ClusterPeeringConnectionAccountVPCMesh_v1
  interface: ClusterPeeringConnection_v1
  fields:
  - { name: provider, type: string, isRequired: true }
  - { name: name, type: string, isRequired: true }
  - { name: account, type: AWSAccount_v1, isRequired: true }
  - { name: description, type: string }
  - { name: tags, type: json }
  - { name: manageRoutes, type: boolean }
  - { name: delete, type: boolean }

- name: ClusterPeeringConnectionAccountTGW_v1
  interface: ClusterPeeringConnection_v1
  fields:
  - { name: provider, type: string, isRequired: true }
  - { name: name, type: string, isRequired: true }
  - { name: account, type: AWSAccount_v1, isRequired: true }
  - { name: description, type: string }
  - { name: tags, type: json }
  - { name: manageRoutes, type: boolean }
  - { name: manageSecurityGroups, type: boolean }
  - { name: cidrBlock, type: string }
  - { name: delete, type: boolean }
  - { name: assumeRole, type: string }

- name: ClusterPeeringConnectionClusterRequester_v1
  interface: ClusterPeeringConnection_v1
  fields:
  - { name: provider, type: string, isRequired: true }
  - { name: name, type: string, isRequired: true }
  - { name: cluster, type: Cluster_v1, isRequired: true }
  - { name: description, type: string }
  - { name: manageRoutes, type: boolean }
  - { name: delete, type: boolean }
  - { name: assumeRole, type: string }

- name: ClusterPeeringConnectionClusterAccepter_v1
  interface: ClusterPeeringConnection_v1
  fields:
  - { name: provider, type: string, isRequired: true }
  - { name: name, type: string, isRequired: true }
  - { name: cluster, type: Cluster_v1, isRequired: true }
  - { name: awsInfrastructureManagementAccount, type: AWSAccount_v1 }
  - { name: description, type: string }
  - { name: manageRoutes, type: boolean }
  - { name: delete, type: boolean }
  - { name: assumeRole, type: string }

- name: ClusterPeering_v1
  fields:
  - { name: connections, type: ClusterPeeringConnection_v1, isRequired: true, isList: true, isInterface: true }

- name: ClusterPrometheus_v1
  fields:
  - { name: url, type: string, isRequired: true }
  - { name: auth, type: VaultSecret_v1, isRequired: true}

- name: Cluster_v1
  datafile: /openshift/cluster-1.yml
  fields:
  - { name: schema, type: string, isRequired: true }
  - { name: path, type: string, isRequired: true }
  - { name: labels, type: json }
  - { name: name, type: string, isUnique: true, isSearchable: true, isRequired: true }
  - { name: description, type: string }
  - { name: auth, type: ClusterAuth_v1, isInterface: true, isList: true, isRequired: true }
  - { name: observabilityNamespace, type: Namespace_v1 }
  - { name: grafanaUrl, type: string }
  - { name: consoleUrl, type: string, isRequired: true }
  - { name: kibanaUrl, type: string, isRequired: true }
  - { name: prometheusUrl, type: string, isRequired: true }
  - { name: alertmanagerUrl, type: string, isRequired: true }
  - { name: serverUrl, type: string, isRequired: true }
  - { name: elbFQDN, type: string, isRequired: true }
  - { name: managedGroups, type: string, isList: true }
  - { name: managedClusterRoles, type: boolean }
  - { name: ocm, type: OpenShiftClusterManager_v1 }
  - { name: spec, type: ClusterSpec_v1, isInterface: true }
  - { name: externalConfiguration, type: ClusterExternalConfiguration_v1 }
  - { name: upgradePolicy, type: ClusterUpgradePolicy_v1 }
  - { name: additionalRouters, type: ClusterAdditionalRouter_v1, isList: true }
  - { name: network, type: ClusterNetwork_v1 }
  - { name: machinePools, type: ClusterMachinePool_v1, isList: true }
  - { name: peering, type: ClusterPeering_v1 }
  - { name: addons, type: ClusterAddon_v1, isList: true }
  - { name: insecureSkipTLSVerify, type: boolean }
  - { name: jumpHost, type: ClusterJumpHost_v1 }
  - { name: automationToken, type: VaultSecret_v1 }
  - { name: clusterAdmin, type: boolean }
  - { name: clusterAdminAutomationToken, type: VaultSecret_v1 }
  - { name: internal, type: boolean }
  - { name: disable, type: DisableClusterAutomations_v1 }
  - { name: awsInfrastructureAccess, type: AWSInfrastructureAccess_v1, isList: true }
  - { name: awsInfrastructureManagementAccounts, type: AWSInfrastructureManagementAccount_v1, isList: true }
  - { name: prometheus, type: ClusterPrometheus_v1}
  - name: namespaces
    type: Namespace_v1
    isList: true
    synthetic:
      schema: /openshift/namespace-1.yml
      subAttr: cluster

- name: KafkaCluster_v1
  fields:
  - { name: schema, type: string, isRequired: true }
  - { name: path, type: string, isRequired: true }
  - { name: labels, type: json }
  - { name: name, type: string, isRequired: true }
  - { name: description, type: string }
  - { name: ocm, type: OpenShiftClusterManager_v1 }
  - { name: spec, type: KafkaClusterSpec_v1 }
  - name: namespaces
    type: Namespace_v1
    isList: true
    synthetic:
      schema: /openshift/namespace-1.yml
      subAttr: kafkaCluster

- name: OpenShiftClusterManagerUpgradePolicyClusterSpec_v1
  fields:
  - { name: id, type: string, isRequired: true }

- name: OpenShiftClusterManagerSectorDependencies_v1
  fields:
  - { name: name, type: string, isRequired: true }
  - { name: ocm, type: OpenShiftClusterManager_v1 }

- name: OpenShiftClusterManagerSector_v1
  fields:
  - { name: name, type: string, isRequired: true, isContextUnique: true }
  - { name: dependencies, type: OpenShiftClusterManagerSectorDependencies_v1, isList: true }

- name: OpenShiftClusterManagerUpgradePolicyTemplate_v1
  fields:
  - { name: path, type: string, isRequired: true, isResource: true, resolveResource: true }
  - { name: type, type: string }
  - { name: variables, type: json }

- name: OpenShiftClusterManagerUpgradePolicyDefault_v1
  fields:
  - { name: name, type: string, isRequired: true, isUnique: true }
  - { name: matchLabels, type: json, isRequired: true }
  - { name: upgradePolicy, type: ClusterUpgradePolicy_v1 }
  - { name: upgradePolicyTemplate, type: OpenShiftClusterManagerUpgradePolicyTemplate_v1 }

- name: OpenShiftClusterManagerUpgradePolicyCluster_v1
  fields:
  - { name: name, type: string, isRequired: true, isUnique: true }
  - { name: upgradePolicy, type: ClusterUpgradePolicy_v1, isRequired: true }

- name: OpenShiftClusterManagerRecommendedVersionsWeight_v1
  fields:
  - { name: majority, type: int }
  - { name: highest, type: int }

- name: OpenShiftClusterManagerRecommendedVersions_v1
  fields:
  - { name: recommendedVersion, type: string, isRequired: true }
  - { name: initialVersion, type: string, isRequired: true }
  - { name: workload, type: string, isRequired: true }
  - { name: channel, type: string }

- name: OpenShiftClusterManager_v1
  datafile: /openshift/openshift-cluster-manager-1.yml
  fields:
  - { name: schema, type: string, isRequired: true }
  - { name: path, type: string, isRequired: true }
  - { name: labels, type: json }
  - { name: name, type: string, isRequired: true, isUnique: true, isSearchable: true }
  - { name: description, type: string }
  - { name: url, type: string, isRequired: true }
  - { name: accessTokenClientId, type: string, isRequired: true }
  - { name: accessTokenUrl, type: string, isRequired: true }
  - { name: accessTokenClientSecret, type: VaultSecret_v1 }
  - { name: addonManagedUpgrades, type: boolean }
  - { name: addonUpgradeTests, type: AddonUpgradeTest_v1, isList: true }
  - { name: recommendedVersions, type: OpenShiftClusterManagerRecommendedVersions_v1, isList: true }
  - { name: recommendedVersionWeight, type: OpenShiftClusterManagerRecommendedVersionsWeight_v1 }
  - { name: blockedVersions, type: string, isList: true }
  - { name: upgradePolicyAllowedWorkloads, type: string, isList: true }
  - { name: upgradePolicyAllowedMutexes, type: string, isList: true }
  - { name: sectors, type: OpenShiftClusterManagerSector_v1, isList: true }
  - { name: upgradePolicyDefaults, type: OpenShiftClusterManagerUpgradePolicyDefault_v1, isList: true }
  - { name: upgradePolicyClusters, type: OpenShiftClusterManagerUpgradePolicyCluster_v1, isList: true }
  - { name: inheritVersionData, type: OpenShiftClusterManager_v1, isList: true }
  - { name: publishVersionData, type: OpenShiftClusterManager_v1, isList: true }
  - name: clusters
    type: Cluster_v1
    isList: true
    synthetic:
      schema: /openshift/cluster-1.yml
      subAttr: cluster

- name: AddonUpgradeTest_v1
  fields:
  - { name: addon, type: ClusterAddon_v1, isRequired: true }
  - { name: instance, type: JenkinsInstance_v1, isRequired: true }
  - { name: name, type: string, isRequired: true }

- name: ClusterAddon_v1
  fields:
  - { name: schema, type: string, isRequired: true }
  - { name: path, type: string, isRequired: true }
  - { name: labels, type: json }
  - { name: name, type: string, isRequired: true }
  - { name: description, type: string }
  - { name: parameters, type: ClusterAddonParameters_v1, isList: true }

- name: ClusterAddonParameters_v1
  fields:
  - { name: id, type: string, isRequired: true }
  - { name: value, type: string, isRequired: true }

- name: AWSInfrastructureAccess_v1
  fields:
  - { name: awsGroup, type: AWSGroup_v1, isRequired: true }
  - { name: accessLevel, type: string, isRequired: true }

- name: AWSInfrastructureManagementAccount_v1
  fields:
  - { name: account, type: AWSAccount_v1, isRequired: true }
  - { name: accessLevel, type: string, isRequired: true }
  - { name: default, type: boolean }

- name: ExternalResourcesProvisioner_v1
  isInterface: true
  interfaceResolve:
    strategy: fieldMap
    fieldMap: {}
  fields:
  - { name: name, type: string, isRequired: true }

- name: AWSAccount_v1
  datafile: /aws/account-1.yml
  interface: ExternalResourcesProvisioner_v1
  fields:
  - { name: schema, type: string, isRequired: true }
  - { name: path, type: string, isRequired: true }
  - { name: labels, type: json }
  - { name: name, type: string, isRequired: true, isUnique: true, isSearchable: true }
  - { name: description, type: string }
  - { name: consoleUrl, type: string, isRequired: true }
  - { name: uid, type: string, isRequired: true, isSearchable: true }
  - { name: resourcesDefaultRegion, type: string, isRequired: true }
  - { name: supportedDeploymentRegions, type: string, isList: true }
  - { name: providerVersion, type: string, isRequired: true }
  - { name: qontractReconcileVersion, type: string }
  - { name: terraformUsername, type: string }
  - { name: accountOwners, type: Owner_v1, isList: true, isRequired: true }
  - { name: automationToken, type: VaultSecret_v1, isRequired: true }
  - { name: garbageCollection, type: boolean }
  - { name: enableDeletion, type: boolean }
  - { name: deletionApprovals, type: DeletionApproval_v1, isList: true }
  - { name: disable, type: DisableClusterAutomations_v1 }
  - { name: deleteKeys, type: string, isList: true }
  - { name: resetPasswords, type: AWSAccountResetPassword_v1, isList: true }
  - { name: premiumSupport, type: boolean, isRequired: true }
  - { name: partition, type: string }
  - { name: sharing, type: AWSAccountSharingOption_v1, isList: true, isInterface: true }
  - { name: terraformState, type: TerraformStateAWS_v1, isRequired: false }
  - { name: rosa, type: RosaOcmSpec_v1, isRequired: false}

  - name: ecrs
    type: AWSECR_v1
    isList: true
    synthetic:
      schema: /aws/ecr-1.yml
      subAttr: account
  - name: policies
    type: AWSUserPolicy_v1
    isList: true
    synthetic:
      schema: /aws/policy-1.yml
      subAttr: account

- name: CNAExperimentalProvisioner_v1
  interface: ExternalResourcesProvisioner_v1
  fields:
  - { name: schema, type: string, isRequired: true }
  - { name: path, type: string, isRequired: true }
  - { name: name, type: string, isRequired: true, isUnique: true, isSearchable: true }
  - { name: description, type: string }
  - { name: ocm, type: OpenShiftClusterManager_v1, isRequired: true }

- name: NamespaceCNAsset_v1
  interface: NamespaceExternalResource_v1
  fields:
  - { name: provider, type: string, isRequired: true }
  - { name: provisioner, type: CNAExperimentalProvisioner_v1, isRequired: true }
  - { name: resources, type: CNAsset_v1, isRequired: true, isList: true, isInterface: true }

- name: CNAsset_v1
  datafile: /cna/asset-1.yml
  isInterface: true
  interfaceResolve:
    strategy: fieldMap
    field: provider
    fieldMap:
      null-asset: CNANullAsset_v1
  fields:
  - { name: provider, type: string, isRequired: true }

- name: CNANullAsset_v1
  interface: CNAsset_v1
  fields:
  - { name: provider, type: string, isRequired: true }
  - { name: identifier, type: string, isRequired: true, isUnique: true }
  - { name: description, type: string }
  - { name: addr_block, type: string }

- name: CloudflareAccount_v1
  interface: ExternalResourcesProvisioner_v1
  fields:
  - { name: schema, type: string, isRequired: true }
  - { name: path, type: string, isRequired: true }
  - { name: name, type: string, isRequired: true, isUnique: true, isSearchable: true }
  - { name: description, type: string }
  - { name: providerVersion, type: string, isRequired: true }
  - { name: accountOwners, type: Owner_v1, isList: true, isRequired: true }
  - { name: enableDeletion, type: boolean }
  - { name: apiCredentials, type: VaultSecret_v1, isRequired: true }
  - { name: terraformStateAccount, type: AWSAccount_v1, isRequired: true }
  - { name: deletionApprovals, type: DeletionApproval_v1, isList: true }
  - { name: enforceTwofactor, type: boolean }
  - { name: type, type: string }

- name: AWSGroup_v1
  fields:
  - { name: schema, type: string, isRequired: true }
  - { name: path, type: string, isRequired: true }
  - { name: labels, type: json }
  - { name: account, type: AWSAccount_v1, isRequired: true }
  - { name: name, type: string, isRequired: true }
  - { name: description, type: string }
  - { name: policies, type: string, isList: true }
  - name: roles
    type: Role_v1
    isList: true
    synthetic:
      schema: /access/role-1.yml
      subAttr: aws_groups

- name: DeletionApproval_v1
  fields:
  - { name: type, type: string, isRequired: true }
  - { name: name, type: string, isRequired: true }
  - { name: expiration, type: string, isRequired: true }

- name: AWSAccountResetPassword_v1
  fields:
  - { name: user, type: User_v1, isRequired: true }
  - { name: requestId, type: string, isRequired: true }

- name: AWSAccountSharingOption_v1
  isInterface: true
  interfaceResolve:
    strategy: fieldMap
    field: provider
    fieldMap:
      ami: AWSAccountSharingOptionAMI_v1
  fields:
  - { name: provider, type: string, isRequired: true }
  - { name: account, type: AWSAccount_v1, isRequired: true }

- name: AWSAccountSharingOptionAMI_v1
  interface: AWSAccountSharingOption_v1
  fields:
  - { name: provider, type: string, isRequired: true }
  - { name: account, type: AWSAccount_v1, isRequired: true }
  - { name: regex, type: string, isRequired: true }
  - { name: region, type: string }

- name: AWSUserPolicy_v1
  fields:
  - { name: schema, type: string, isRequired: true }
  - { name: path, type: string, isRequired: true }
  - { name: labels, type: json }
  - { name: account, type: AWSAccount_v1, isRequired: true }
  - { name: name, type: string, isRequired: true }
  - { name: description, type: string }
  - { name: mandatory, type: boolean }
  - { name: policy, type: json, isRequired: true }

- name: AWSVPC_v1
  fields:
  - { name: schema, type: string, isRequired: true }
  - { name: path, type: string, isRequired: true }
  - { name: labels, type: json }
  - { name: account, type: AWSAccount_v1, isRequired: true }
  - { name: name, type: string, isRequired: true }
  - { name: description, type: string }
  - { name: vpc_id, type: string, isRequired: true }
  - { name: cidr_block, type: string, isRequired: true }
  - { name: region, type: string, isRequired: true }
  - { name: subnets, type: AWSSubnet_v1, isList: true }

- name: AWSSubnet_v1
  fields:
  - { name: id, type: string, isRequired: true }

- name: AWSECR_v1
  fields:
  - { name: schema, type: string, isRequired: true }
  - { name: path, type: string, isRequired: true }
  - { name: labels, type: json }
  - { name: account, type: AWSAccount_v1, isRequired: true }
  - { name: name, type: string, isRequired: true }
  - { name: description, type: string }
  - { name: region, type: string, isRequired: true }

- name: AWSS3EventNotification_v1
  fields:
  - { name: event_type, type: string, isRequired: true, isList: true}
  - { name: destination, type: string, isRequired: true}
  - { name: destination_type, type: string, isRequired: true}
  - { name: filter_prefix, type: string}
  - { name: filter_suffix, type: string}

- name: AWSRDSEventNotification_v1
  fields:
  - { name: destination, type: string, isRequired: true}
  - { name: source_type, type: string}
  - { name: event_categories, type: string, isList: true}

- name: TerraformState_v1
  isInterface: true
  interfaceResolve:
    strategy: fieldMap
    field: provider
    fieldMap:
      s3: TerraformStateAWS_v1
  fields:
  - { name: provider, type: string, isRequired: false }

- name: TerraformStateAWS_v1
  interface: TerraformState_v1
  fields:
  - { name: provider, type: string, isRequired: true}
  - { name: bucket, type: string, isRequired: true }
  - { name: region, type: string, isRequired: true }
  - { name: integrations, type: AWSTerraformStateIntegrations_v1, isList: true, isRequired: true }

- name: AWSTerraformStateIntegrations_v1
  fields:
  - { name: integration, type: string, isRequired: true }
  - { name: key, type: string, isRequired: true }

- name: ACMDomain_v1
  fields:
  - { name: domain_name, type: string, isRequired: true }
  - { name: alternate_names, type: string, isList: true }

- name: NamespaceOpenshiftResource_v1
  datafile: /openshift/openshift-resource-1.yml
  isInterface: true
  interfaceResolve:
    strategy: fieldMap
    field: provider
    fieldMap:
      resource: NamespaceOpenshiftResourceResource_v1
      resource-template: NamespaceOpenshiftResourceResourceTemplate_v1
      vault-secret: NamespaceOpenshiftResourceVaultSecret_v1
      route: NamespaceOpenshiftResourceRoute_v1
  fields:
  - { name: provider, type: string, isRequired: true }

- name: NamespaceOpenshiftResourceResource_v1
  interface: NamespaceOpenshiftResource_v1
  fields:
  - { name: provider, type: string, isRequired: true, isContextUnique: true }
  - { name: path, type: string, isRequired: true, isResource: true, resolveResource: true, isContextUnique: true }
  - { name: validate_json, type: boolean }
  - { name: validate_alertmanager_config, type: boolean }
  - { name: alertmanager_config_key, type: string }
  - { name: enable_query_support, type: boolean }

- name: NamespaceOpenshiftResourceResourceTemplate_v1
  interface: NamespaceOpenshiftResource_v1
  fields:
  - { name: provider, type: string, isRequired: true }
  - { name: path, type: string, isRequired: true, isResource: true, resolveResource: true }
  - { name: type, type: string }
  - { name: variables, type: json }
  - { name: validate_alertmanager_config, type: boolean }
  - { name: alertmanager_config_key, type: string }
  - { name: enable_query_support, type: boolean }

- name: NamespaceOpenshiftResourceVaultSecret_v1
  interface: NamespaceOpenshiftResource_v1
  fields:
  - { name: provider, type: string, isRequired: true, isContextUnique: true }
  - { name: path, type: string, isRequired: true, isContextUnique: true }
  - { name: version, type: int, isRequired: true }
  - { name: name, type: string, isContextUnique: true }
  - { name: labels, type: json }
  - { name: annotations, type: json }
  - { name: type, type: string }
  - { name: validate_alertmanager_config, type: boolean }
  - { name: alertmanager_config_key, type: string }

- name: NamespaceOpenshiftResourceRoute_v1
  interface: NamespaceOpenshiftResource_v1
  fields:
  - { name: provider, type: string, isRequired: true, isContextUnique: true }
  - { name: path, type: string, isRequired: true, isResource: true, resolveResource: true, isContextUnique: true }
  - { name: vault_tls_secret_path, type: string }
  - { name: vault_tls_secret_version, type: int }

- name: NamespaceExternalResource_v1
  isInterface: true
  interfaceResolve:
    strategy: fieldMap
    field: provider
    fieldMap:
      aws: NamespaceTerraformProviderResourceAWS_v1
      cloudflare: NamespaceTerraformProviderResourceCloudflare_v1
      gcp-project: NamespaceTerraformProviderResourceGCPProject_v1
      cna-experimental: NamespaceCNAsset_v1
  fields:
  - { name: provider, type: string, isRequired: true }
  - { name: provisioner, type: ExternalResourcesProvisioner_v1, isRequired: true, isInterface: true }

- name: NamespaceTerraformProviderResourceAWS_v1
  interface: NamespaceExternalResource_v1
  fields:
  - { name: provider, type: string, isRequired: true, isContextUnique: true }
  - { name: provisioner, type: AWSAccount_v1, isRequired: true, isContextUnique: true }
  - { name: resources, type: NamespaceTerraformResourceAWS_v1, isRequired: true, isList: true, isInterface: true }

- name: NamespaceTerraformProviderResourceCloudflare_v1
  interface: NamespaceExternalResource_v1
  fields:
  - { name: provider, type: string, isRequired: true }
  - { name: provisioner, type: CloudflareAccount_v1, isRequired: true }
  - { name: resources, type: NamespaceTerraformResourceCloudflare_v1, isRequired: true, isList: true, isInterface: true }

- name: NamespaceTerraformResourceCloudflare_v1
  datafile: /cloudflare/terraform-resource-1.yml
  isInterface: true
  interfaceResolve:
    strategy: fieldMap
    field: provider
    fieldMap:
      zone: NamespaceTerraformResourceCloudflareZone_v1
      worker_script: NamespaceTerraformResourceCloudflareWorkerScript_v1
  fields:
  - { name: provider, type: string, isRequired: true }

- name: NamespaceTerraformResourceCloudflareZone_v1
  interface: NamespaceTerraformResourceCloudflare_v1
  fields:
  - { name: provider, type: string, isRequired: true }
  - { name: identifier, type: string, isRequired: true }
  - { name: zone, type: string, isRequired: true }
  - { name: plan, type: string }
  - { name: type, type: string }
  - { name: settings, type: json }
  - { name: argo, type: CloudflareZoneArgo_v1 }
  - { name: records, type: CloudflareZoneRecord_v1, isList: true }
  - { name: workers, type: CloudflareZoneWorker_v1, isList: true }
  - { name: certificates, type: CloudflareZoneCertificate_v1, isList: true }

- name: CloudflareZoneArgo_v1
  fields:
  - { name: tiered_caching, type: boolean }
  - { name: smart_routing, type: boolean }

- name: CloudflareZoneRecord_v1
  fields:
  - { name: name, type: string, isRequired: true }
  - { name: type, type: string, isRequired: true }
  - { name: ttl, type: int, isRequired: true }
  - { name: value, type: string, isRequired: true }
  - { name: proxied, type: boolean }

- name: CloudflareZoneWorker_v1
  fields:
  - { name: identifier, type: string, isRequired: true }
  - { name: pattern, type: string, isRequired: true }
  - { name: script_name, type: string, isRequired: true }

- name: CloudflareZoneCertificate_v1
  fields:
  - { name: identifier, type: string, isRequired: true }
  - { name: type, type: string, isRequired: true }
  - { name: hosts, type: string, isRequired: true, isList: true }
  - { name: validation_method, type: string, isRequired: true }
  - { name: validity_days, type: int, isRequired: true }
  - { name: certificate_authority, type: string, isRequired: true }
  - { name: cloudflare_branding, type: boolean }
  - { name: wait_for_active_status, type: boolean }

- name: NamespaceTerraformResourceCloudflareWorkerScript_v1
  interface: NamespaceTerraformResourceCloudflare_v1
  fields:
  - { name: provider, type: string, isRequired: true }
  - { name: identifier, type: string, isRequired: true }
  - { name: name, type: string, isRequired: true }
  - { name: content_from_github, type: CloudflareZoneWorkerScriptContentFromGithub_v1 }
  - { name: vars, type: CloudflareZoneWorkerScriptVars_v1, isList: true }

- name: CloudflareZoneWorkerScriptContentFromGithub_v1
  fields:
  - { name: repo, type: string, isRequired: true }
  - { name: path, type: string, isRequired: true }
  - { name: ref, type: string, isRequired: true }

- name: CloudflareZoneWorkerScriptVars_v1
  fields:
  - { name: name, type: string, isRequired: true }
  - { name: text, type: string, isRequired: true }

- name: NamespaceTerraformProviderResourceGCPProject_v1
  interface: NamespaceExternalResource_v1
  fields:
  - { name: provider, type: string, isRequired: true, isContextUnique: true }
  - { name: provisioner, type: GcpProject_v1, isRequired: true, isContextUnique: true }
  - { name: resources, type: NamespaceTerraformResourceGCP_v1, isRequired: true, isList: true, isInterface: true }

- name: NamespaceTerraformResourceGCP_v1
  datafile: /gcp/terraform-resource-1.yml
  isInterface: true
  interfaceResolve:
    strategy: fieldMap
    field: provider
    fieldMap:
      dns-zone: NamespaceTerraformResourceManagedZone_v1
  fields:
  - { name: provider, type: string, isRequired: true }
  - { name: identifier, type: string, isRequired: true }
  - { name: output_resource_name, type: string }
  - { name: annotations, type: json }

- name: NamespaceTerraformResourceManagedZone_v1
  interface: NamespaceTerraformResourceGCP_v1
  fields:
  - { name: provider, type: string, isRequired: true }
  - { name: identifier, type: string, isRequired: true }
  - { name: name, type: string, isRequired: true }
  - { name: output_resource_name, type: string }
  - { name: annotations, type: json }

- name: NamespaceTerraformResourceAWS_v1
  datafile: /aws/terraform-resources-1.yml
  isInterface: true
  interfaceResolve:
    strategy: fieldMap
    field: provider
    fieldMap:
      rds: NamespaceTerraformResourceRDS_v1
      s3: NamespaceTerraformResourceS3_v1
      elasticache: NamespaceTerraformResourceElastiCache_v1
      aws-iam-service-account: NamespaceTerraformResourceServiceAccount_v1
      secrets-manager-service-account: NamespaceTerraformResourceSecretsManagerServiceAccount_v1
      aws-iam-role: NamespaceTerraformResourceRole_v1
      sqs: NamespaceTerraformResourceSQS_v1
      sns: NamespaceTerraformResourceSNSTopic_v1
      dynamodb: NamespaceTerraformResourceDynamoDB_v1
      ecr: NamespaceTerraformResourceECR_v1
      s3-cloudfront: NamespaceTerraformResourceS3CloudFront_v1
      s3-sqs: NamespaceTerraformResourceS3SQS_v1
      cloudwatch: NamespaceTerraformResourceCloudWatch_v1
      kms: NamespaceTerraformResourceKMS_v1
      elasticsearch: NamespaceTerraformResourceElasticSearch_v1
      acm: NamespaceTerraformResourceACM_v1
      kinesis: NamespaceTerraformResourceKinesis_v1
      s3-cloudfront-public-key: NamespaceTerraformResourceS3CloudFrontPublicKey_v1
      alb: NamespaceTerraformResourceALB_v1
      secrets-manager: NamespaceTerraformResourceSecretsManager_v1
      asg: NamespaceTerraformResourceASG_v1
      route53-zone: NamespaceTerraformResourceRoute53Zone_v1
      rosa-authenticator: NamespaceTerraformResourceRosaAuthenticator_V1
      rosa-authenticator-vpce: NamespaceTerraformResourceRosaAuthenticatorVPCE_V1
  fields:
  - { name: provider, type: string, isRequired: true }
  - { name: identifier, type: string, isRequired: true }
  - { name: output_resource_name, type: string }
  - { name: output_format, type: NamespaceTerraformResourceOutputFormat_v1, isInterface: true }
  - { name: annotations, type: json }

- name: NamespaceTerraformResourceOutputFormat_v1
  isInterface: true
  interfaceResolve:
    strategy: fieldMap
    field: provider
    fieldMap:
      generic-secret: NamespaceTerraformResourceGenericSecretOutputFormat_v1
  fields:
  - { name: provider, type: string, isRequired: true }

- name: NamespaceTerraformResourceGenericSecretOutputFormat_v1
  interface: NamespaceTerraformResourceOutputFormat_v1
  fields:
  - { name: provider, type: string, isRequired: true }
  - { name: data, type: json }

- name: NamespaceTerraformResourceASG_v1
  interface: NamespaceTerraformResourceAWS_v1
  fields:
  - { name: provider, type: string, isRequired: true, isContextUnique: true }
  - { name: region, type: string, isContextUnique: true }
  - { name: identifier, type: string, isRequired: true, isContextUnique: true }
  - { name: defaults, type: string, isRequired: true, isResource: true }
  - { name: cloudinit_configs, type: CloudinitConfig_v1, isList: true }
  - { name: variables, type: json }
  - { name: overrides, type: json }
  - { name: extra_tags, type: json }
  - { name: image, type: ASGImage_v1, isRequired: true, isList: true, isInterface: true }
  - { name: output_resource_name, type: string }
  - { name: output_format, type: NamespaceTerraformResourceOutputFormat_v1, isInterface: true }
  - { name: annotations, type: json }

- name: CloudinitConfig_v1
  fields:
  - { name: filename, type: string }
  - { name: content_type, type: string }
  - { name: content, type: string, isRequired: true }

- name: ASGImage_v1
  isInterface: true
  interfaceResolve:
    strategy: fieldMap
    field: provider
    fieldMap:
      git: ASGImageGit_v1
      static: ASGImageStatic_v1
  fields:
  - { name: provider, type: string, isRequired: true }
  - { name: tag_name, type: string, isRequired: true }

- name: ASGImageGit_v1
  interface: ASGImage_v1
  fields:
  - { name: provider, type: string, isRequired: true }
  - { name: tag_name, type: string, isRequired: true }
  - { name: url, type: string, isRequired: true }
  - { name: ref, type: string, isRequired: true }
  - { name: upstream, type: SaasResourceTemplateTargetUpstream_v1 }

- name: ASGImageStatic_v1
  interface: ASGImage_v1
  fields:
  - { name: provider, type: string, isRequired: true }
  - { name: tag_name, type: string, isRequired: true }
  - { name: value, type: string, isRequired: true }

- name: NamespaceTerraformResourceSecretsManager_v1
  interface: NamespaceTerraformResourceAWS_v1
  fields:
  - { name: provider, type: string, isRequired: true, isContextUnique: true }
  - { name: region, type: string, isContextUnique: true }
  - { name: identifier, type: string, isRequired: true, isContextUnique: true }
  - { name: secret, type: VaultSecret_v1 }
  - { name: output_resource_name, type: string }
  - { name: output_format, type: NamespaceTerraformResourceOutputFormat_v1, isInterface: true }
  - { name: annotations, type: json }

- name: NamespaceTerraformResourceS3CloudFrontPublicKey_v1
  interface: NamespaceTerraformResourceAWS_v1
  fields:
  - { name: provider, type: string, isRequired: true, isContextUnique: true }
  - { name: region, type: string, isContextUnique: true }
  - { name: identifier, type: string, isRequired: true, isContextUnique: true }
  - { name: secret, type: VaultSecret_v1 }
  - { name: output_resource_name, type: string }
  - { name: output_format, type: NamespaceTerraformResourceOutputFormat_v1, isInterface: true }
  - { name: annotations, type: json }

- name: NamespaceTerraformResourceACM_v1
  interface: NamespaceTerraformResourceAWS_v1
  fields:
  - { name: provider, type: string, isRequired: true, isContextUnique: true }
  - { name: region, type: string, isContextUnique: true }
  - { name: identifier, type: string, isRequired: true, isContextUnique: true }
  - { name: secret, type: VaultSecret_v1 }
  - { name: domain, type: ACMDomain_v1 }
  - { name: output_resource_name, type: string }
  - { name: output_format, type: NamespaceTerraformResourceOutputFormat_v1, isInterface: true }
  - { name: annotations, type: json }

- name: NamespaceTerraformResourceElasticSearch_v1
  interface: NamespaceTerraformResourceAWS_v1
  fields:
  - { name: provider, type: string, isRequired: true, isContextUnique: true }
  - { name: region, type: string, isContextUnique: true }
  - { name: identifier, type: string, isRequired: true, isContextUnique: true }
  - { name: defaults, type: string, isRequired: true, isResource: true }
  - { name: output_resource_name, type: string }
  - { name: output_format, type: NamespaceTerraformResourceOutputFormat_v1, isInterface: true }
  - { name: annotations, type: json }
  - { name: publish_log_types, type: string, isList: true }

- name: NamespaceTerraformResourceRDS_v1
  interface: NamespaceTerraformResourceAWS_v1
  fields:
  - { name: provider, type: string, isRequired: true, isContextUnique: true }
  - { name: region, type: string, isContextUnique: true }
  - { name: identifier, type: string, isRequired: true, isContextUnique: true }
  - { name: defaults, type: string, isRequired: true, isResource: true }
  - { name: availability_zone, type: string }
  - { name: parameter_group, type: string }
  - { name: old_parameter_group, type: string }
  - { name: overrides, type: json }
  - { name: output_resource_name, type: string }
  - { name: output_format, type: NamespaceTerraformResourceOutputFormat_v1, isInterface: true }
  - { name: output_resource_db_name, type: string }
  - { name: reset_password, type: string }
  - { name: enhanced_monitoring, type: boolean }
  - { name: grafana_datasource, type: boolean }
  - { name: replica_source, type: string }
  - { name: ca_cert, type: VaultSecret_v1 }
  - { name: annotations, type: json }
  - { name: event_notifications, type: AWSRDSEventNotification_v1, isList: true}

- name: NamespaceTerraformResourceS3_v1
  interface: NamespaceTerraformResourceAWS_v1
  fields:
  - { name: provider, type: string, isRequired: true, isContextUnique: true }
  - { name: region, type: string, isContextUnique: true }
  - { name: identifier, type: string, isRequired: true, isContextUnique: true }
  - { name: defaults, type: string, isRequired: true, isResource: true }
  - { name: overrides, type: json }
  - { name: event_notifications, type: AWSS3EventNotification_v1, isList: true }
  - { name: sqs_identifier, type: string }
  - { name: s3_events, type: string, isList: true }
  - { name: bucket_policy, type: json }
  - { name: output_resource_name, type: string }
  - { name: output_format, type: NamespaceTerraformResourceOutputFormat_v1, isInterface: true }
  - { name: storage_class, type: string }
  - { name: annotations, type: json }

- name: NamespaceTerraformResourceServiceAccountAWSInfrastructureAccess_v1
  fields:
  - { name: cluster, type: Cluster_v1 }
  - { name: access_level, type: string }
  - { name: assume_role, type: string }

- name: NamespaceTerraformResourceServiceAccount_v1
  interface: NamespaceTerraformResourceAWS_v1
  fields:
  - { name: provider, type: string, isRequired: true, isContextUnique: true }
  - { name: identifier, type: string, isRequired: true, isContextUnique: true }
  - { name: variables, type: json }
  - { name: policies, type: string, isList: true }
  - { name: user_policy, type: json }
  - { name: output_resource_name, type: string }
  - { name: output_format, type: NamespaceTerraformResourceOutputFormat_v1, isInterface: true }
  - { name: aws_infrastructure_access, type: NamespaceTerraformResourceServiceAccountAWSInfrastructureAccess_v1 }
  - { name: annotations, type: json }

- name: AssumeRole_v1
  fields:
  - { name: AWS, type: string, isList: true }
  - { name: Service, type: string, isList: true }

- name: NamespaceTerraformResourceSecretsManagerServiceAccount_v1
  interface: NamespaceTerraformResourceAWS_v1
  fields:
  - { name: provider, type: string, isRequired: true, isContextUnique: true }
  - { name: identifier, type: string, isRequired: true, isContextUnique: true }
  - { name: secrets_prefix, type: string, isRequired: true }
  - { name: output_resource_name, type: string }
  - { name: output_format, type: NamespaceTerraformResourceOutputFormat_v1, isInterface: true }
  - { name: annotations, type: json }

- name: NamespaceTerraformResourceRole_v1
  interface: NamespaceTerraformResourceAWS_v1
  fields:
  - { name: provider, type: string, isRequired: true, isContextUnique: true }
  - { name: identifier, type: string, isRequired: true, isContextUnique: true }
  - { name: assume_role, type: AssumeRole_v1, isRequired: true }
  - { name: assume_condition, type: json }
  - { name: inline_policy, type: json }
  - { name: output_resource_name, type: string }
  - { name: output_format, type: NamespaceTerraformResourceOutputFormat_v1, isInterface: true }
  - { name: annotations, type: json }

- name: NamespaceTerraformResourceElastiCache_v1
  interface: NamespaceTerraformResourceAWS_v1
  fields:
  - { name: provider, type: string, isRequired: true, isContextUnique: true }
  - { name: identifier, type: string, isRequired: true, isContextUnique: true }
  - { name: defaults, type: string, isRequired: true, isResource: true }
  - { name: parameter_group, type: string }
  - { name: region, type: string, isContextUnique: true }
  - { name: overrides, type: json }
  - { name: output_resource_name, type: string }
  - { name: output_format, type: NamespaceTerraformResourceOutputFormat_v1, isInterface: true }
  - { name: annotations, type: json }

- name: SQSQueuesSpecs_v1
  fields:
  - { name: defaults, type: string, isRequired: true, isResource: true }
  - { name: queues, type: KeyValue_v1, isRequired: true, isList: true }

- name: NamespaceTerraformResourceSQS_v1
  interface: NamespaceTerraformResourceAWS_v1
  fields:
  - { name: provider, type: string, isRequired: true, isContextUnique: true }
  - { name: region, type: string, isContextUnique: true }
  - { name: identifier, type: string, isRequired: true, isContextUnique: true }
  - { name: output_resource_name, type: string }
  - { name: output_format, type: NamespaceTerraformResourceOutputFormat_v1, isInterface: true }
  - { name: specs, type: SQSQueuesSpecs_v1, isRequired: true, isList: true }
  - { name: annotations, type: json }

- name: NamespaceTerraformResourceSNSSubscription_v1
  fields:
  - { name: protocol, type: string, isRequired: true }
  - { name: endpoint, type: string, isRequired: true}

- name: NamespaceTerraformResourceSNSTopic_v1
  interface: NamespaceTerraformResourceAWS_v1
  fields:
  - { name: provider, type: string, isRequired: true, isContextUnique: true }
  - { name: defaults, type: string, isResource: true, isRequired: true }
  - { name: region, type: string, isContextUnique: true }
  - { name: identifier, type: string, isRequired: true, isContextUnique: true }
  - { name: output_resource_name, type: string }
  - { name: output_format, type: NamespaceTerraformResourceOutputFormat_v1, isInterface: true }
  - { name: fifo_topic, type: boolean }
  - { name: inline_policy, type: json }
  - { name: annotations, type: json }
  - { name: subscriptions, type: NamespaceTerraformResourceSNSSubscription_v1, isList: true}

- name: DynamoDBTableSpecs_v1
  fields:
  - { name: defaults, type: string, isRequired: true, isResource: true }
  - { name: tables, type: KeyValue_v1, isRequired: true, isList: true }

- name: NamespaceTerraformResourceDynamoDB_v1
  interface: NamespaceTerraformResourceAWS_v1
  fields:
  - { name: provider, type: string, isRequired: true, isContextUnique: true }
  - { name: region, type: string, isContextUnique: true }
  - { name: identifier, type: string, isRequired: true, isContextUnique: true }
  - { name: output_resource_name, type: string }
  - { name: output_format, type: NamespaceTerraformResourceOutputFormat_v1, isInterface: true }
  - { name: specs, type: DynamoDBTableSpecs_v1, isRequired: true, isList: true }
  - { name: annotations, type: json }

- name: NamespaceTerraformResourceECR_v1
  interface: NamespaceTerraformResourceAWS_v1
  fields:
  - { name: provider, type: string, isRequired: true, isContextUnique: true }
  - { name: region, type: string, isContextUnique: true }
  - { name: identifier, type: string, isRequired: true, isContextUnique: true }
  - { name: output_resource_name, type: string }
  - { name: output_format, type: NamespaceTerraformResourceOutputFormat_v1, isInterface: true }
  - { name: mirror, type: ContainerImageMirror_v1, isRequired: false }
  - { name: public, type: boolean }
  - { name: annotations, type: json }


- name: NamespaceTerraformResourceS3CloudFront_v1
  interface: NamespaceTerraformResourceAWS_v1
  fields:
  - { name: provider, type: string, isRequired: true, isContextUnique: true }
  - { name: region, type: string, isContextUnique: true }
  - { name: identifier, type: string, isRequired: true, isContextUnique: true }
  - { name: defaults, type: string, isRequired: true, isResource: true }
  - { name: output_resource_name, type: string }
  - { name: output_format, type: NamespaceTerraformResourceOutputFormat_v1, isInterface: true }
  - { name: storage_class, type: string }
  - { name: annotations, type: json }

- name: NamespaceTerraformResourceS3SQS_v1
  interface: NamespaceTerraformResourceAWS_v1
  fields:
  - { name: provider, type: string, isRequired: true, isContextUnique: true }
  - { name: region, type: string, isContextUnique: true }
  - { name: identifier, type: string, isRequired: true, isContextUnique: true }
  - { name: kms_encryption, type: boolean }
  - { name: defaults, type: string, isRequired: true, isResource: true }
  - { name: output_resource_name, type: string }
  - { name: output_format, type: NamespaceTerraformResourceOutputFormat_v1, isInterface: true }
  - { name: storage_class, type: string }
  - { name: annotations, type: json }

- name: NamespaceTerraformResourceCloudWatch_v1
  interface: NamespaceTerraformResourceAWS_v1
  fields:
  - { name: provider, type: string, isRequired: true, isContextUnique: true }
  - { name: region, type: string, isContextUnique: true }
  - { name: identifier, type: string, isRequired: true, isContextUnique: true }
  - { name: defaults, type: string, isRequired: true, isResource: true }
  - { name: es_identifier, type: string }
  - { name: filter_pattern, type: string }
  - { name: output_resource_name, type: string }
  - { name: output_format, type: NamespaceTerraformResourceOutputFormat_v1, isInterface: true }
  - { name: annotations, type: json }

- name: NamespaceTerraformResourceKMS_v1
  interface: NamespaceTerraformResourceAWS_v1
  fields:
  - { name: provider, type: string, isRequired: true, isContextUnique: true }
  - { name: region, type: string, isContextUnique: true }
  - { name: identifier, type: string, isRequired: true, isContextUnique: true }
  - { name: defaults, type: string, isRequired: true, isResource: true }
  - { name: overrides, type: json }
  - { name: output_resource_name, type: string }
  - { name: output_format, type: NamespaceTerraformResourceOutputFormat_v1, isInterface: true }
  - { name: annotations, type: json }

- name: NamespaceTerraformResourceKinesis_v1
  interface: NamespaceTerraformResourceAWS_v1
  fields:
  - { name: provider, type: string, isRequired: true, isContextUnique: true }
  - { name: region, type: string, isContextUnique: true }
  - { name: identifier, type: string, isRequired: true, isContextUnique: true }
  - { name: defaults, type: string, isRequired: true, isResource: true }
  - { name: es_identifier, type: string }
  - { name: overrides, type: json }
  - { name: output_resource_name, type: string }
  - { name: output_format, type: NamespaceTerraformResourceOutputFormat_v1, isInterface: true }
  - { name: annotations, type: json }

- name: NamespaceTerraformResourceALB_v1
  interface: NamespaceTerraformResourceAWS_v1
  fields:
  - { name: provider, type: string, isRequired: true, isContextUnique: true }
  - { name: identifier, type: string, isRequired: true, isContextUnique: true }
  - { name: region, type: string, isContextUnique: true }
  - { name: vpc, type: AWSVPC_v1, isRequired: true }
  - { name: certificate_arn, type: string, isRequired: true }
  - { name: idle_timeout, type: int }
  - { name: enable_http2, type: boolean }
  - { name: ingress_cidr_blocks, type: string, isRequired: true, isList: true }
  - { name: ip_address_type, type: string }
  - { name: targets, type: NamespaceTerraformResourceALBTargets_v1, isRequired: true, isList: true }
  - { name: rules, type: NamespaceTerraformResourceALBRules_v1, isRequired: true, isList: true }
  - { name: vpc, type: AWSVPC_v1, isRequired: true }
  - { name: output_resource_name, type: string }
  - { name: output_format, type: NamespaceTerraformResourceOutputFormat_v1, isInterface: true }
  - { name: annotations, type: json }

- name: NamespaceTerraformResourceRoute53Zone_v1
  interface: NamespaceTerraformResourceAWS_v1
  fields:
  - { name: provider, type: string, isRequired: true, isContextUnique: true }
  - { name: region, type: string, isContextUnique: true }
  - { name: identifier, type: string, isRequired: true, isContextUnique: true }
  - { name: name, type: string, isRequired: true }
  - { name: records, type: DnsRecord_v1, isList: true }
  - { name: output_resource_name, type: string }
  - { name: output_format, type: NamespaceTerraformResourceOutputFormat_v1, isInterface: true }
  - { name: annotations, type: json }

- name: NamespaceTerraformResourceRosaAuthenticator_V1
  interface: NamespaceTerraformResourceAWS_v1
  fields:
  - { name: provider, type: string, isRequired: true, isContextUnique: true }
  - { name: region, type: string, isContextUnique: true }
  - { name: identifier, type: string, isRequired: true, isContextUnique: true }
  - { name: api_proxy_uri, type: string, isRequired: true }
  - { name: sms_role_ext_id, type: string, isRequired: false }
  - { name: cognito_callback_bucket_name, type: string, isRequired: true }
  - { name: pre_signup_lambda_github_release_url, type: string }
  - { name: vpc_arn, type: string, isRequired: false }
  - { name: vpc_id, type: string, isRequired: true }
  - { name: vpce_id, type: string, isRequired: false }
  - { name: subnet_ids, type: string, isList: true, isRequired: true }
  - { name: network_interface_ids, type: string, isList: true, isRequired: false }
  - { name: certificate_arn, type: string, isRequired: true }
  - { name: domain_name, type: string, isRequired: true }
  - { name: openshift_ingress_load_balancer_arn, type: string, isRequired: false }
  - { name: defaults, type: string, isRequired: true, isResource: true }
  - { name: output_resource_name, type: string }
  - { name: output_format, type: NamespaceTerraformResourceOutputFormat_v1, isInterface: true }
  - { name: annotations, type: json }

- name: NamespaceTerraformResourceRosaAuthenticatorVPCE_V1
  interface: NamespaceTerraformResourceAWS_v1
  fields:
  - { name: provider, type: string, isRequired: true, isContextUnique: true }
  - { name: annotations, type: json }
  - { name: defaults, type: string, isRequired: true, isResource: true }
  - { name: identifier, type: string, isRequired: true, isContextUnique: true }
  - { name: output_format, type: NamespaceTerraformResourceOutputFormat_v1, isInterface: true }
  - { name: output_resource_name, type: string }
  - { name: region, type: string, isContextUnique: true }
  - { name: subnet_ids, type: string, isList: true, isRequired: true }
  - { name: vpc_id, type: string, isRequired: true }

- name: NamespaceTerraformResourceALBTargets_v1
  fields:
  - { name: name, type: string, isRequired: true }
  - { name: default, type: boolean, isRequired: true }
  - { name: ips, type: string, isList: true }
  - { name: openshift_service, type: string }

- name: NamespaceTerraformResourceALBRules_v1
  fields:
  - { name: condition, type: NamespaceTerraformResourceALBConditon_v1, isRequired: true}
  - { name: action, type: NamespaceTerraformResourceALBAction_v1, isRequired: true, isList: true}

- name: NamespaceTerraformResourceALBConditon_v1
  fields:
  - { name: path, type: string, isRequired: true}
  - { name: methods, type: string, isList: true, isRequired: false}

- name: NamespaceTerraformResourceALBAction_v1
  fields:
  - { name: target, type: string, isRequired: true}
  - { name: weight, type: int, isRequired: true}

- name: ResourceValues_v1
  fields:
  - { name: cpu, type: string }
  - { name: memory, type: string }

- name: LimitRangeItem_v1
  fields:
  - { name: default, type: ResourceValues_v1 }
  - { name: defaultRequest, type: ResourceValues_v1 }
  - { name: max, type: ResourceValues_v1 }
  - { name: maxLimitRequestRatio, type: ResourceValues_v1 }
  - { name: min, type: ResourceValues_v1 }
  - { name: type, type: string }

- name: LimitRange_v1
  fields:
  - { name: schema, type: string, isRequired: true }
  - { name: labels, type: json }
  - { name: name, type: string, isRequired: true }
  - { name: description, type: string, isRequired: true }
  - { name: limits, type: LimitRangeItem_v1, isList: true, isRequired: true }

- name: ResourceQuotaItemResources_v1
  fields:
  - { name: limits, type: ResourceValues_v1 }
  - { name: requests, type: ResourceValues_v1 }
  - { name: pods, type: int }

- name: ResourceQuotaItem_v1
  fields:
  - { name: name, type: string, isRequired: true }
  - { name: resources, type: ResourceQuotaItemResources_v1, isRequired: true }
  - { name: scopes, type: string, isList: true }

- name: ResourceQuota_v1
  fields:
  - { name: schema, type: string, isRequired: true }
  - { name: labels, type: json }
  - { name: name, type: string, isRequired: true }
  - { name: description, type: string, isRequired: true }
  - { name: quotas, type: ResourceQuotaItem_v1, isList: true, isRequired: true }

- name: NamespaceManagedResourceTypeOverrides_v1
  fields:
  - { name: resource, type: string, isRequired: true }
  - { name: override, type: string, isRequired: true }

- name: ManagedResourceNames_v1
  fields:
  - { name: resource, type: string, isRequired: true }
  - { name: resourceNames, type: string, isRequired: true, isList: true }

- name: ServiceAccountTokenSpec_v1
  fields:
  - { name: name, type: string }
  - { name: namespace, type: Namespace_v1, isRequired: true }
  - { name: serviceAccountName, type: string, isRequired: true }

- name: SharedResources_v1
  datafile: /openshift/shared-resources-1.yml
  fields:
  - { name: schema, type: string, isRequired: true }
  - { name: path, type: string, isRequired: true }
  - { name: labels, type: json }
  - { name: name, type: string, isRequired: true, isSearchable: true, isUnique: true }
  - { name: description, type: string, isRequired: true }
  - { name: openshiftResources, type: NamespaceOpenshiftResource_v1, isList: true, isInterface: true, isRequired: true }
  - { name: openshiftServiceAccountTokens, type: ServiceAccountTokenSpec_v1, isList: true }
  - { name: glitchtipProjects, type: GlitchtipProjects_v1, isList: true }
  - name: namespaces
    type: Namespace_v1
    isList: true
    isRequired: true
    synthetic:
      schema: /openshift/namespace-1.yml
      subAttr: sharedResources

- name: Namespace_v1
  datafile: /openshift/namespace-1.yml
  fields:
  - { name: schema, type: string, isRequired: true }
  - { name: path, type: string, isRequired: true }
  - { name: labels, type: json }
  - { name: name, type: string, isRequired: true }
  - { name: delete, type: boolean }
  - { name: description, type: string, isRequired: true }
  - { name: grafanaUrl, type: string }
  - { name: cluster, type: Cluster_v1, isRequired: true }
  - { name: app, type: App_v1, isRequired: true }
  - { name: environment, type: Environment_v1, isRequired: true}
  - { name: limitRanges, type: LimitRange_v1 }
  - { name: quota, type: ResourceQuota_v1 }
  - { name: networkPoliciesAllow, type: Namespace_v1, isList: true }
  - { name: clusterAdmin, type: boolean }
  - { name: managedRoles, type: boolean }
  - { name: managedResourceTypes, type: string, isList: true }
  - { name: managedResourceTypeOverrides, type: NamespaceManagedResourceTypeOverrides_v1, isList: true }
  - { name: managedResourceNames, type: ManagedResourceNames_v1, isList: true }
  - { name: sharedResources, type: SharedResources_v1, isList: true }
  - { name: openshiftResources, type: NamespaceOpenshiftResource_v1, isList: true, isInterface: true }
  - { name: managedExternalResources, type: boolean }
  - { name: externalResources, type: NamespaceExternalResource_v1, isList: true, isInterface: true }
  - { name: openshiftServiceAccountTokens, type: ServiceAccountTokenSpec_v1, isList: true }
  - { name: glitchtipProjects, type: GlitchtipProjects_v1, isList: true }
  - { name: kafkaCluster, type: KafkaCluster_v1 }
  - { name: skupperSite, type: NamespaceSkupperSiteConfig_v1 }

- name: Owner_v1
  fields:
  - { name: name, type: string, isRequired: true }
  - { name: email, type: string, isRequired: true }

- name: Dependency_v1
  fields:
  - { name: schema, type: string, isRequired: true }
  - { name: path, type: string, isRequired: true }
  - { name: labels, type: json }
  - { name: name, type: string, isRequired: true }
  - { name: description, type: string, isRequired: true }
  - { name: statefulness, type: string, isRequired: true }
  - { name: opsModel, type: string, isRequired: true }
  - { name: statusPage, type: string }
  - { name: SLA, type: float, isRequired: true }
  - { name: dependencyFailureImpact, type: string, isRequired: true }

- name: AppGcrReposItems_v1
  fields:
  - { name: name, type: string, isRequired: true }
  - { name: description, type: string, isRequired: true }
  - { name: public, type: boolean, isRequired: true }
  - { name: mirror, type: ContainerImageMirror_v1, isRequired: false }

- name: OcpReleaseMirror_v1
  fields:
  - { name: hiveCluster, type: Cluster_v1, isRequired: true }
  - { name: ecrResourcesNamespace, type: Namespace_v1, isRequired: true}
  - { name: ocpReleaseEcrIdentifier, type: string, isRequired: true }
  - { name: ocpArtDevEcrIdentifier, type: string, isRequired: true }
  - { name: quayTargetOrgs, type: QuayOrg_v1, isRequired: true, isList: true}
  - { name: mirrorChannels, type: string, isRequired: true, isList: true }

- name: ContainerImageMirror_v1
  fields:
  - { name: url, type: string, isRequired: true }
  - { name: pullCredentials, type: VaultSecret_v1 }
  - { name: tags, type: string, isList: true }
  - { name: tagsExclude, type: string, isList: true }

- name: AppGcrRepos_v1
  fields:
  - { name: project, type: GcpProject_v1, isRequired: true }
  - { name: items, type: AppGcrReposItems_v1, isRequired: true, isList: true }

- name: AppQuayReposItems_v1
  fields:
  - { name: name, type: string, isRequired: true }
  - { name: description, type: string, isRequired: true }
  - { name: public, type: boolean, isRequired: true }
  - { name: mirror, type: ContainerImageMirror_v1, isRequired: false }

- name: AppQuayReposTeams_v1
  fields:
  - { name: permissions, type: PermissionQuayOrgTeam_v1, isList: true, isRequired: true }
  - { name: role, type: string, isRequired: true }

- name: AppQuayReposNotificationVerificationMethod_v1
  fields:
  - { name: jiraBoard, type: JiraBoard_v1 }

- name: AppQuayReposNotifications_v1
  fields:
  - { name: event, type: string, isRequired: true }
  - { name: severity, type: string }
  - { name: method, type: string, isRequired: true }
  - { name: escalationPolicy, type: AppEscalationPolicy_v1, isRequired: true }
  - { name: verificationMethod, type: AppQuayReposNotificationVerificationMethod_v1 }

- name: AppQuayRepos_v1
  fields:
  - { name: org, type: QuayOrg_v1, isRequired: true }
  - { name: teams, type: AppQuayReposTeams_v1, isList: true }
  - { name: notifications, type: AppQuayReposNotifications_v1, isList: true }
  - { name: items, type: AppQuayReposItems_v1, isRequired: true, isList: true }

- name: AppEscalationPolicy_v1
  fields:
  - { name: path, type: string, isRequired: true }
  - { name: name, type: string, isRequired: true }
  - { name: labels, type: json }
  - { name: description, type: string, isRequired: true }
  - { name: channels, type: AppEscalationPolicyChannels_v1, isRequired: true }

- name: AppEscalationPolicyChannels_v1
  fields:
  - { name: slackUserGroup, type: PermissionSlackUsergroup_v1, isList: true, isRequired: true }
  - { name: email, type: string, isList: true, isRequired: true }
  - { name: pagerduty, type: PagerDutyTarget_v1 }
  - { name: jiraBoard, type: JiraBoard_v1, isList: true, isRequired: true }
  - { name: nextEscalationPolicy, type: AppEscalationPolicy_v1 }

- name: AppEndPoints_v1
  fields:
  - { name: name, type: string, isRequired: true }
  - { name: description, type: string, isRequired: true }
  - { name: url, type: string, isRequired: true }
  - { name: monitoring, type: AppEndPointMonitoring_v1, isList: true }

- name: AppEndPointMonitoring_v1
  fields:
  - { name: provider, type: EndpointMonitoringProvider_v1, isInterface: true }

- name: CodeComponentGitlabOwners_v1
  fields:
    - { name: enabled, type: boolean, isRequired: true }

- name: CodeComponentGitlabHousekeeping_v1
  fields:
  - { name: enabled, type: boolean, isRequired: true }
  - { name: rebase, type: boolean, isRequired: true }
  - { name: days_interval, type: int }
  - { name: limit, type: int }
  - { name: enable_closing, type: boolean }
  - { name: pipeline_timeout, type: int }
  - { name: labels_allowed, type: CodeComponentGitlabHousekeepingLabelsAllowed_v1, isList: true }

- name: CodeComponentGitlabHousekeepingLabelsAllowed_v1
  fields:
  - { name: role, type: Role_v1, isRequired: true }

- name: CodeComponentGitlabSync_v1
  fields:
  - { name: sourceProject, type: CodeComponentGitlabSyncProject_v1, isRequired: true }
  - { name: destinationProject, type: CodeComponentGitlabSyncProject_v1, isRequired: true }

- name: CodeComponentGitlabSyncProject_v1
  fields:
  - { name: name, type: string, isRequired: true }
  - { name: group, type: string, isRequired: true }
  - { name: branch, type: string, isRequired: true }

- name: AppCodeComponents_v1
  fields:
  - { name: name, type: string, isRequired: true }
  - { name: resource, type: string, isRequired: true }
  - { name: url, type: string, isRequired: true }
  - { name: gitlabSync, type: CodeComponentGitlabSync_v1 }
  - { name: showInReviewQueue, type: boolean}
  - { name: gitlabRepoOwners, type: CodeComponentGitlabOwners_v1 }
  - { name: gitlabHousekeeping, type: CodeComponentGitlabHousekeeping_v1 }
  - { name: jira, type: JiraServer_v1 }
  - { name: mirror, type: string }

- name: Product_v1
  datafile: /app-sre/product-1.yml
  fields:
  - { name: schema, type: string, isRequired: true }
  - { name: path, type: string, isRequired: true }
  - { name: labels, type: json }
  - { name: name, type: string, isRequired: true }
  - { name: description, type: string, isRequired: true }
  - { name: productOwners, type: Owner_v1, isList: true, isRequired: true }
  - name: environments
    type: Environment_v1
    isList: true
    synthetic:
      schema: /app-sre/environment-1.yml
      subAttr: product

- name: Environment_v1
  datafile: /app-sre/environment-1.yml
  fields:
  - { name: schema, type: string, isRequired: true }
  - { name: path, type: string, isRequired: true }
  - { name: labels, type: json }
  - { name: name, type: string, isRequired: true }
  - { name: description, type: string, isRequired: true }
  - { name: product, type: Product_v1, isRequired: true }
  - { name: parameters, type: json }
  - { name: secretParameters, type: SaasSecretParameters_v1, isList: true }
  - { name: dependsOn, type: Environment_v1 }
  - name: namespaces
    type: Namespace_v1
    isList: true
    synthetic:
      schema: /openshift/namespace-1.yml
      subAttr: environment

- name: App_v1
  datafile: /app-sre/app-1.yml
  fields:
  - { name: schema, type: string, isRequired: true }
  - { name: path, type: string, isRequired: true }
  - { name: labels, type: json }
  - { name: name, type: string, isRequired: true, isSearchable: true, isUnique: true }
  - { name: description, type: string, isRequired: true }
  - { name: onboardingStatus, type: string, isRequired: true }
  - { name: grafanaUrls, isList: true, type: GrafanaDashboardUrls_v1, isRequired: true }
  - { name: sopsUrl, type: string, isRequired: true }
  - { name: architectureDocument, type: string, isRequired: true }
  - { name: parentApp, type: App_v1 }
  - { name: serviceDocs, type: string, isList: true }
  - { name: serviceOwners, type: Owner_v1, isList: true, isRequired: true }
  - { name: serviceNotifications, type: Owner_v1, isList: true }
  - { name: dependencies, type: Dependency_v1, isList: true }
  - { name: gcrRepos, type: AppGcrRepos_v1, isList: true }
  - { name: quayRepos, type: AppQuayRepos_v1, isList: true }
  - { name: escalationPolicy, type: AppEscalationPolicy_v1, isRequired: true }
  - { name: endPoints, type: AppEndPoints_v1, isList: true }
  - { name: codeComponents, type: AppCodeComponents_v1, isList: true }
  - { name: sentryProjects, type: AppSentryProjects_v1, isList: true }
  - name: statusPageComponents
    type: StatusPageComponent_v1
    isList: true
    synthetic:
      schema: /dependencies/status-page-component-1.yml
      subAttr: app
  - name: namespaces
    type: Namespace_v1
    isList: true
    synthetic:
      schema: /openshift/namespace-1.yml
      subAttr: app
  - name: childrenApps
    type: App_v1
    isList: true
    synthetic:
      schema: /app-sre/app-1.yml
      subAttr: parentApp
  - name: jenkinsConfigs
    type: JenkinsConfig_v1
    isList: true
    synthetic:
      schema: /dependencies/jenkins-config-1.yml
      subAttr: app
  - name: saasFiles
    type: SaasFile_v2
    isList: true
    synthetic:
      schema: /app-sre/saas-file-2.yml
      subAttr: app
  - name: sreCheckpoints
    type: SRECheckpoint_v1
    isList: true
    synthetic:
      schema: /app-sre/sre-checkpoint-1.yml
      subAttr: app
  - name: sloDocuments
    type: SLODocument_v1
    isList: true
    synthetic:
      schema: /app-sre/slo-document-1.yml
      subAttr: app
  - name: glitchtipProjects
    type: GlitchtipProjects_v1
    isList: true
    synthetic:
      schema: /dependencies/glitchtip-project-1.yml
      subAttr: app

- name: SaasFile_v2
  datafile: /app-sre/saas-file-2.yml
  fields:
  - { name: schema, type: string, isRequired: true }
  - { name: path, type: string, isRequired: true }
  - { name: labels, type: json }
  - { name: name, type: string, isRequired: true, isSearchable: true, isUnique: true }
  - { name: description, type: string, isRequired: true }
  - { name: app, type: App_v1, isRequired: true }
  - { name: pipelinesProvider, type: PipelinesProvider_v1, isRequired: true, isInterface: true }
  - { name: slack, type: SlackOutput_v1 }
  - { name: managedResourceTypes, type: string, isRequired: true, isList: true }
  - { name: managedResourceNames, type: ManagedResourceNames_v1, isList: true }
  - { name: authentication, type: SaasFileAuthentication_v1 }
  - { name: parameters, type: json }
  - { name: allowedSecretParameterPaths, type: string, isList: true }
  - { name: secretParameters, type: SaasSecretParameters_v1, isList: true }
  - { name: resourceTemplates, type: SaasResourceTemplate_v2, isRequired: true, isList: true }
  - { name: imagePatterns, type: string, isRequired: true, isList: true }
  - { name: takeover, type: boolean }
  - { name: deprecated, type: boolean }
  - { name: compare, type: boolean }
  - { name: timeout, type: string }
  - { name: publishJobLogs, type: boolean }
  - { name: clusterAdmin, type: boolean }
  - { name: use_channel_in_image_tag, type: boolean }
  - { name: deployResources, type: DeployResources_v1 }
  - name: selfServiceRoles
    type: Role_v1
    isList: true
    synthetic:
      schema: /access/role-1.yml
      subAttr: self_service.datafiles

- name: DeployResources_v1
  fields:
  - { name: requests, type: ResourceRequirements_v1, isRequired: true }
  - { name: limits, type: ResourceRequirements_v1, isRequired: true }

- name: ResourceRequirements_v1
  fields:
  - { name: cpu, type: string, isRequired: true }
  - { name: memory, type: string, isRequired: true }

- name: SlackOutputNotifications_v1
  fields:
  - { name: start, type: boolean }

- name: SlackOutput_v1
  fields:
  - { name: workspace, type: SlackWorkspace_v1, isRequired: true }
  - { name: channel, type: string }
  - { name: icon_emoji, type: string }
  - { name: username, type: string }
  - { name: output, type: string }
  - { name: notifications, type: SlackOutputNotifications_v1 }

- name: SaasFileAuthentication_v1
  fields:
  - { name: code, type: VaultSecret_v1 }
  - { name: image, type: VaultSecret_v1 }

- name: SaasResourceTemplate_v2
  fields:
  - { name: name, type: string, isRequired: true, isContextUnique: true }
  - { name: url, type: string, isRequired: true }
  - { name: path, type: string, isRequired: true }
  - { name: provider, type: string }
  - { name: hash_length, type: int }
  - { name: parameters, type: json }
  - { name: secretParameters, type: SaasSecretParameters_v1, isList: true }
  - { name: targets, type: SaasResourceTemplateTarget_v2, isRequired: true, isList: true }

- name: SaasResourceTemplateTarget_v2
  fields:
  - { name: path, type: string }
  - { name: name, type: string, isContextUnique: true }
  - { name: namespace, type: Namespace_v1, isRequired: true, isContextUnique: true }
  - { name: ref, type: string, isRequired: true }
  - { name: promotion, type: SaasResourceTemplateTargetPromotion_v1 }
  - { name: parameters, type: json }
  - { name: secretParameters, type: SaasSecretParameters_v1, isList: true }
  - { name: upstream, type: SaasResourceTemplateTargetUpstream_v1 }
  - { name: image, type: SaasResourceTemplateTargetImage_v1 }
  - { name: disable, type: boolean }
  - { name: delete, type: boolean }

- name: SaasResourceTemplateTargetReference_v2
  datafile: /app-sre/saas-file-target-1.yml
  fields:
  - { name: path, type: string, isRequired: true }
  - { name: schema, type: string, isRequired: true }

- name: SaasResourceTemplateTargetUpstream_v1
  fields:
  - { name: instance, type: JenkinsInstance_v1, isRequired: true }
  - { name: name, type: string, isRequired: true }

- name: SaasResourceTemplateTargetImage_v1
  fields:
  - { name: org, type: QuayOrg_v1, isRequired: true }
  - { name: name, type: string, isRequired: true }

- name: SaasResourceTemplateTargetPromotion_v1
  fields:
  - { name: auto, type: boolean }
  - { name: publish, type: string, isList: true }
  - { name: subscribe, type: string, isList: true }
  - { name: promotion_data, type: PromotionData_v1, isList: true }

- name: SaasSecretParameters_v1
  fields:
  - { name: name, type: string, isRequired: true }
  - { name: secret, type: VaultSecret_v1, isRequired: true }

- name: PromotionData_v1
  fields:
  - { name: channel, type: string }
  - { name: data, type: PromotionChannelData_v1, isList: true, isInterface: true }

- name: PromotionChannelData_v1
  isInterface: true
  interfaceResolve:
    strategy: fieldMap
    field: type
    fieldMap:
      parent_saas_config: ParentSaasPromotion_v1
  fields:
  - { name: type, type: string, isRequired: true }

- name: ParentSaasPromotion_v1
  interface: PromotionChannelData_v1
  fields:
  - { name: type, type: string, isRequired: true }
  - { name: parent_saas, type: string }
  - { name: target_config_hash, type: string }


- name: PipelinesProvider_v1
  isInterface: true
  interfaceResolve:
    strategy: fieldMap
    field: provider
    fieldMap:
      tekton: PipelinesProviderTekton_v1
  fields:
  - { name: schema, type: string, isRequired: true }
  - { name: path, type: string, isRequired: true }
  - { name: labels, type: json }
  - { name: name, type: string, isRequired: true }
  - { name: description, type: string, isRequired: true }
  - { name: provider, type: string, isRequired: true }

- name: PipelinesProviderTekton_v1
  interface: PipelinesProvider_v1
  fields:
  - { name: schema, type: string, isRequired: true }
  - { name: path, type: string, isRequired: true }
  - { name: labels, type: json }
  - { name: name, type: string, isRequired: true }
  - { name: description, type: string, isRequired: true }
  - { name: provider, type: string, isRequired: true }
  - { name: defaults, type: PipelinesProviderTektonProviderDefaults_v1, isRequired: true }
  - { name: namespace, type: Namespace_v1, isRequired: true }
  - { name: retention, type: PipelinesProviderRetention_v1 }
  - { name: taskTemplates, type: PipelinesProviderTektonObjectTemplate_v1, isList: true }
  - { name: pipelineTemplates, type: PipelinesProviderPipelineTemplates_v1 }
  - { name: deployResources, type: DeployResources_v1 }

- name: PipelinesProviderRetention_v1
  fields:
  - { name: days, type: int }
  - { name: minimum, type: int }

- name: PipelinesProviderTektonObjectTemplate_v1
  fields:
  - { name: name, type: string, isRequired: true }
  - { name: type, type: string, isRequired: true }
  - { name: path, type: string, isRequired: true }
  - { name: variables, type: json }

- name: PipelinesProviderPipelineTemplates_v1
  fields:
  - { name: openshiftSaasDeploy, type: PipelinesProviderTektonObjectTemplate_v1, isRequired: true }

- name: PipelinesProviderTektonProviderDefaults_v1
  datafile: /app-sre/tekton-provider-defaults-1.yml
  fields:
  - { name: schema, type: string, isRequired: true }
  - { name: path, type: string, isRequired: true }
  - { name: name, type: string, isRequired: true }
  - { name: labels, type: json, isRequired: true }
  - { name: description, type: string, isRequired: true }
  - { name: retention, type: PipelinesProviderRetention_v1, isRequired: true }
  - { name: taskTemplates, type: PipelinesProviderTektonObjectTemplate_v1, isRequired: true, isList: true }
  - { name: pipelineTemplates, type: PipelinesProviderPipelineTemplates_v1, isRequired: true }
  - { name: deployResources, type: DeployResources_v1 }

- name: VaultInstance_v1
  fields:
  - { name: schema, type: string, isRequired: true }
  - { name: labels, type: json }
  - { name: name, type: string, isRequired: true }
  - { name: description, type: string, isRequired: true }
  - { name: address, type: string, isRequired: true }
  - { name: auth, type: VaultInstanceAuth_v1, isInterface: true, isRequired: true }
  - { name: replication, type: VaultReplicationConfig_v1, isList: true}

- name: VaultReplicationConfig_v1
  fields:
  - { name: vaultInstance, type: VaultInstance_v1, isRequired: true}
  - { name: destAuth, type: VaultInstanceAuth_v1, isInterface: true, isRequired: true }
  - { name: sourceAuth, type: VaultInstanceAuth_v1, isInterface: true, isRequired: true }
  - { name: paths, type: VaultReplicationPaths_v1, isInterface: true, isList: true}

- name: VaultReplicationPaths_v1
  datafile: /vault-config/replication-paths-1.yml
  isInterface: true
  interfaceResolve:
    strategy: fieldMap
    field: provider
    fieldMap:
      jenkins: VaultReplicationJenkins_v1
      policy: VaultReplicationPolicy_v1
  fields:
  - { name: provider, type: string, isRequired: true }

- name: VaultReplicationJenkins_v1
  interface: VaultReplicationPaths_v1
  fields:
  - { name: provider, type: string, isRequired: true}
  - { name: jenkinsInstance, type: JenkinsInstance_v1, isRequired: true }
  - { name: policy, type: VaultPolicy_v1 }

- name: VaultReplicationPolicy_v1
  interface: VaultReplicationPaths_v1
  fields:
  - { name: provider, type: string, isRequired: true}
  - { name: policy, type: VaultPolicy_v1 }

- name: VaultInstanceAuth_v1
  isInterface: true
  interfaceResolve:
    strategy: fieldMap
    field: provider
    fieldMap:
      approle: VaultInstanceAuthApprole_v1
      token: VaultInstanceAuthToken_v1
  fields:
  - { name: provider, type: string, isRequired: true }
  - { name: secretEngine, type: string, isRequired: true }

- name: VaultInstanceAuthApprole_v1
  interface: VaultInstanceAuth_v1
  fields:
  - { name: provider, type: string, isRequired: true }
  - { name: secretEngine, type: string, isRequired: true }
  - { name: roleID, type: VaultSecret_v1, isRequired: true }
  - { name: secretID, type: VaultSecret_v1, isRequired: true }

- name: VaultInstanceAuthToken_v1
  interface: VaultInstanceAuth_v1
  fields:
  - { name: provider, type: string, isRequired: true }
  - { name: secretEngine, type: string, isRequired: true }
  - { name: token, type: VaultSecret_v1, isRequired: true }

- name: OidcPermission_v1
  isInterface: true
  interfaceResolve:
    strategy: fieldMap
    field: service
    fieldMap:
      vault: OidcPermissionVault_v1
  fields:
  - { name: schema, type: string, isRequired: true }
  - { name: labels, type: json }
  - { name: name, type: string, isRequired: true }
  - { name: service, type: string, isRequired: true }
  - { name: description, type: string, isRequired: true }

- name: OidcPermissionVault_v1
  interface: OidcPermission_v1
  fields:
  - { name: schema, type: string, isRequired: true }
  - { name: labels, type: json }
  - { name: name, type: string, isRequired: true }
  - { name: service, type: string, isRequired: true }
  - { name: description, type: string, isRequired: true }
  - { name: instance, type: VaultInstance_v1, isRequired: true }
  - { name: vault_policies, type: VaultPolicy_v1, isList: true, isRequired: true }

- name: Permission_v1
  datafile: /access/permission-1.yml
  isInterface: true
  interfaceResolve:
    strategy: fieldMap
    field: service
    fieldMap:
      github-org: PermissionGithubOrg_v1
      github-org-team: PermissionGithubOrgTeam_v1
      quay-membership: PermissionQuayOrgTeam_v1
      jenkins-role: PermissionJenkinsRole_v1
      slack-usergroup: PermissionSlackUsergroup_v1
      gitlab-group-membership: PermissionGitlabGroupMembership_v1
  fields:
  - { name: schema, type: string, isRequired: true }
  - { name: path, type: string, isRequired: true }
  - { name: labels, type: json }
  - { name: name, type: string, isRequired: true }
  - { name: description, type: string, isRequired: true }
  - { name: service, type: string, isRequired: true }

- name: PermissionGithubOrg_v1
  datafile: /access/permission-1.yml
  interface: Permission_v1
  fields:
  - { name: schema, type: string, isRequired: true }
  - { name: path, type: string, isRequired: true }
  - { name: labels, type: json }
  - { name: name, type: string, isRequired: true }
  - { name: description, type: string, isRequired: true }
  - { name: service, type: string, isRequired: true }
  - { name: org, type: string, isRequired: true }
  - { name: role, type: string }

- name: PermissionGithubOrgTeam_v1
  datafile: /access/permission-1.yml
  interface: Permission_v1
  fields:
  - { name: schema, type: string, isRequired: true }
  - { name: path, type: string, isRequired: true }
  - { name: labels, type: json }
  - { name: name, type: string, isRequired: true }
  - { name: description, type: string, isRequired: true }
  - { name: service, type: string, isRequired: true }
  - { name: org, type: string, isRequired: true }
  - { name: team, type: string, isRequired: true }
  - { name: role, type: string }

- name: PermissionJenkinsRole_v1
  datafile: /access/permission-1.yml
  interface: Permission_v1
  fields:
  - { name: schema, type: string, isRequired: true }
  - { name: path, type: string, isRequired: true }
  - { name: labels, type: json }
  - { name: name, type: string, isRequired: true }
  - { name: description, type: string, isRequired: true }
  - { name: service, type: string, isRequired: true }
  - { name: instance, type: JenkinsInstance_v1, isRequired: true }
  - { name: role, type: string, isRequired: true }
  - { name: token, type: VaultSecret_v1, isRequired: true }

- name: PermissionGitlabGroupMembership_v1
  datafile: /access/permission-1.yml
  interface: Permission_v1
  fields:
  - { name: schema, type: string, isRequired: true }
  - { name: path, type: string, isRequired: true }
  - { name: labels, type: json }
  - { name: name, type: string, isRequired: true }
  - { name: description, type: string, isRequired: true }
  - { name: service, type: string, isRequired: true }
  - { name: group, type: string, isRequired: true}
  - { name: access, type: string, isRequired: true}
  - { name: pagerduty, type: PagerDutyTarget_v1, isList: true }
  - name: roles
    type: Role_v1
    isList: true
    synthetic:
      schema: /access/role-1.yml
      subAttr: permissions

- name: PermissionSlackUsergroup_v1
  datafile: /access/permission-1.yml
  interface: Permission_v1
  fields:
  - { name: schema, type: string, isRequired: true }
  - { name: path, type: string, isRequired: true }
  - { name: labels, type: json }
  - { name: name, type: string, isRequired: true }
  - { name: description, type: string, isRequired: true }
  - { name: service, type: string, isRequired: true }
  - { name: handle, type: string, isRequired: true }
  - { name: workspace, type: SlackWorkspace_v1, isRequired: true }
  - { name: pagerduty, type: PagerDutyTarget_v1, isList: true }
  - { name: channels, type: string, isList: true }
  - { name: ownersFromRepos, type: string, isList: true }
  - { name: schedule, type: Schedule_v1 }
  - { name: skip, type: boolean }
  - name: roles
    type: Role_v1
    isList: true
    synthetic:
      schema: /access/role-1.yml
      subAttr: permissions

- name: Schedule_v1
  datafile: /app-sre/schedule-1.yml
  fields:
  - { name: schema, type: string, isRequired: true }
  - { name: path, type: string, isRequired: true }
  - { name: name, type: string, isRequired: true }
  - { name: description, type: string }
  - { name: schedule, type: ScheduleEntry_v1, isRequired: true, isList: true }

- name: ScheduleEntry_v1
  fields:
  - { name: start, type: string, isRequired: true }
  - { name: end, type: string, isRequired: true }
  - { name: users, type: User_v1, isRequired: true, isList: true }

- name: VaultPolicyMapping_v1
  fields:
  - { name: github_team, type: PermissionGithubOrgTeam_v1, isRequired: true }
  - { name: policies, type: VaultPolicy_v1, isList: true, isRequired: true }

- name: VaultAuth_v1
  fields:
  - { name: _path, type: string, isRequired: true }
  - { name: type, type: string, isRequired: true }
  - { name: description, type: string, isRequired: true }
  - { name: instance, type: VaultInstance_v1, isRequired: true }
  - { name: settings, type: VaultAuthSettings_v1 }
  - { name: policy_mappings, type: VaultPolicyMapping_v1, isList: true }

- name: PermissionQuayOrgTeam_v1
  interface: Permission_v1
  fields:
  - { name: schema, type: string, isRequired: true }
  - { name: path, type: string, isRequired: true }
  - { name: labels, type: json }
  - { name: name, type: string, isRequired: true }
  - { name: description, type: string, isRequired: true }
  - { name: service, type: string, isRequired: true }
  - { name: quayOrg, type: QuayOrg_v1, isRequired: true }
  - { name: team, type: string, isRequired: true }
  - name: roles
    type: Role_v1
    isList: true
    isRequired: true
    synthetic:
      schema: /access/role-1.yml
      subAttr: permissions

- name: ExternalUser_v1
  fields:
  - { name: schema, type: string, isRequired: true }
  - { name: path, type: string, isRequired: true }
  - { name: labels, type: json }
  - { name: name, type: string, isRequired: true }
  - { name: github_username, type: string, isRequired: true }
  - { name: sponsors, type: User_v1, isRequired: true, isList: true }

- name: User_v1
  datafile: /access/user-1.yml
  fields:
  - { name: schema, type: string, isRequired: true }
  - { name: path, type: string, isRequired: true }
  - { name: labels, type: json }
  - { name: name, type: string, isRequired: true }
  - { name: org_username, type: string, isSearchable: true, isRequired: true, isUnique: true }
  - { name: github_username, type: string, isRequired: true }
  - { name: quay_username, type: string }
  - { name: slack_username, type: string }
  - { name: pagerduty_username, type: string }
  - { name: aws_username, type: string }
  - { name: public_gpg_key, type: string }
  - { name: tag_on_merge_requests, type: boolean }
  - { name: tag_on_cluster_updates, type: boolean }
  - { name: roles, type: Role_v1, isList: true }
  - name: requests
    type: CredentialsRequest_v1
    isList: true
    synthetic:
      schema: /app-interface/credentials-request-1.yml
      subAttr: user
  - name: queries
    type: AppInterfaceSqlQuery_v1
    isList: true
    synthetic:
      schema: /app-interface/app-interface-sql-query-1.yml
      subAttr: user
  - name: gabi_instances
    type: GabiInstance_v1
    isList: true
    synthetic:
      schema: /app-sre/gabi-instance-1.yml
      subAttr: users

- name: Bot_v1
  fields:
  - { name: schema, type: string, isRequired: true }
  - { name: path, type: string, isRequired: true }
  - { name: labels, type: json }
  - { name: name, type: string, isRequired: true }
  - { name: description, type: string }
  - { name: org_username, type: string }
  - { name: github_username, type: string }
  - { name: gitlab_username, type: string}
  - { name: openshift_serviceaccount, type: string }
  - { name: quay_username, type: string }
  - { name: owner, type: User_v1 }
  - { name: roles, type: Role_v1, isList: true }

- name: Access_v1
  fields:
  - { name: namespace, type: Namespace_v1 }
  - { name: role, type: string }
  - { name: cluster, type: Cluster_v1 }
  - { name: group, type: string }
  - { name: clusterRole, type: string }

- name: Role_v1
  datafile: /access/role-1.yml
  fields:
  - { name: schema, type: string, isRequired: true }
  - { name: path, type: string, isRequired: true }
  - { name: labels, type: json }
  - { name: name, type: string, isRequired: true, isUnique: true, isSearchable: true }
  - { name: description, type: string }
  - { name: expirationDate, type: string }
  - { name: permissions, type: Permission_v1, isList: true, isInterface: true }
  - { name: oidc_permissions, type: OidcPermission_v1, isList: true, isInterface: true }
  - { name: tag_on_cluster_updates, type: boolean }
  - { name: access, type: Access_v1, isList: true }
  - { name: aws_groups, type: AWSGroup_v1, isList: true }
  - { name: user_policies, type: AWSUserPolicy_v1, isList: true }
  - { name: sentry_teams, type: SentryTeam_v1, isList: true }
  - { name: sentry_roles, type: SentryRole_v1, isList: true }
  - { name: glitchtip_teams, type: GlitchtipTeam_v1, isList: true }
  - { name: glitchtip_roles, type: GlitchtipRole_v1, isList: true }
  - { name: sendgrid_accounts, type: SendGridAccount_v1, isList: true }
  - { name: self_service, type: SelfServiceConfig_v1, isList: true }
  - name: users
    type: User_v1
    isList: true
    isRequired: true
    synthetic:
      schema: /access/user-1.yml
      subAttr: roles
  - name: bots
    type: Bot_v1
    isList: true
    isRequired: true
    synthetic:
      schema: /access/bot-1.yml
      subAttr: roles

- name: SelfServiceConfig_v1
  fields:
  - { name: datafiles, type: DatafileObject_v1, isList: true, isInterface: true }
  - { name: resources, type: string, isList: true, isResource: true }
  - { name: change_type, type: ChangeType_v1, isRequired: true }
  - { name: description, type: string }

- name: IntegrationPrCheck_v1
  fields:
  - { name: cmd, type: string, isRequired: true }
  - { name: state, type: boolean }
  - { name: sqs, type: boolean }
  - { name: disabled, type: boolean }
  - { name: always_run, type: boolean }
  - { name: no_validate_schemas, type: boolean }
  - { name: run_for_valid_saas_file_changes, type: boolean }
  - { name: early_exit, type: boolean }
  - { name: check_only_affected_shards, type: boolean }
  - { name: shardSpecOverride, type: IntegrationSpecShardSpecOverride_v1, isList: true, isInterface: true }

- name: IntegrationSpecExtraEnv_v1
  fields:
  - { name: secretName, type: string }
  - { name: secretKey, type: string }
  - { name: name, type: string }
  - { name: value, type: string }

- name: IntegrationSpecLogs_v1
  fields:
  - { name: slack, type: boolean }
  - { name: googleChat, type: boolean }

- name: AWSShardSpecOverride_v1
  interface: IntegrationSpecShardSpecOverride_v1
  fields:
    - { name: shardingStrategy, type: string, isRequired: true }
    - { name: awsAccount, type: AWSAccount_v1, isRequired: true }
    - { name: imageRef, type: string, isRequired: true }

- name: IntegrationSpecShardSpecOverride_v1
  isInterface: true
  interfaceResolve:
    strategy: fieldMap
    field: shardingStrategy
    fieldMap:
      per-aws-account: AWSShardSpecOverride_v1
  fields:
    - { name: shardingStrategy, type: string, isRequired: true }
    - { name: imageRef, type: string, isRequired: true }

- name: IntegrationSpec_v1
  fields:
  - { name: cache, type: boolean }
  - { name: command, type: string }
  - { name: disableUnleash, type: boolean }
  - { name: environmentAware, type: boolean }
  - { name: extraArgs, type: string }
  - { name: extraEnv, type: IntegrationSpecExtraEnv_v1, isList: true }
  - { name: internalCertificates, type: boolean }
  - { name: logs, type: IntegrationSpecLogs_v1 }
  - { name: resources, type: DeployResources_v1, isRequired: true }
  - { name: fluentdResources, type: DeployResources_v1}
  - { name: shards, type: int }
  - { name: shardingStrategy, type: string }
  - { name: sleepDurationSecs, type: string }
  - { name: state, type: boolean }
  - { name: storage, type: string }
  - { name: trigger, type: boolean }
  - { name: cron, type: string }
  - { name: dashdotdb, type: boolean }
  - { name: concurrencyPolicy, type: string }
  - { name: restartPolicy, type: string }
  - { name: successfulJobHistoryLimit, type: int }
  - { name: failedJobHistoryLimit, type: int }
  - { name: imageRef, type: string }

- name: IntegrationManaged_v1
  fields:
  - { name: namespace, type: Namespace_v1, isRequired: true }
  - { name: shardSpecOverride, type: IntegrationSpecShardSpecOverride_v1, isList: true, isInterface: true }
  - { name: spec, type: IntegrationSpec_v1, isRequired: true }

- name: Integration_v1
  datafile: /app-sre/integration-1.yml
  fields:
  - { name: schema, type: string, isRequired: true }
  - { name: path, type: string, isRequired: true }
  - { name: labels, type: json }
  - { name: name, type: string, isRequired: true }
  - { name: description, type: string, isRequired: true }
  - { name: upstream, type: string }
  - { name: schemas, type: string, isRequired: true, isList: true }
  - { name: pr_check, type: IntegrationPrCheck_v1 }
  - { name: managed, type: IntegrationManaged_v1, isList: true }

- name: Report_v1
  datafile: /app-sre/report-1.yml
  fields:
  - { name: schema, type: string, isRequired: true }
  - { name: path, type: string, isRequired: true }
  - { name: labels, type: json }
  - { name: app, type: App_v1, isRequired: true }
  - { name: name, type: string, isRequired: true }
  - { name: date, type: string, isRequired: true }
  - { name: contentFormatVersion, type: string, isRequired: true }
  - { name: content, type: string, isRequired: true }

- name: SRECheckpoint_v1
  datafile: /app-sre/sre-checkpoint-1.yml
  fields:
  - { name: schema, type: string, isRequired: true }
  - { name: path, type: string, isRequired: true }
  - { name: labels, type: json }
  - { name: app, type: App_v1, isRequired: true }
  - { name: date, type: string, isRequired: true }
  - { name: issue, type: string, isRequired: true }

- name: AppInterfaceSqlQuery_v1
  fields:
  - { name: schema, type: string, isRequired: true }
  - { name: path, type: string, isRequired: true }
  - { name: labels, type: json }
  - { name: name, type: string, isRequired: true, isUnique: true }
  - { name: namespace, type: Namespace_v1, isRequired: true }
  - { name: identifier, type: string, isRequired: true }
  - { name: requestor, type: User_v1 }
  - { name: overrides, type: SqlEmailOverrides_v1 }
  - { name: output, type: string, isRequired: true }
  - { name: schedule, type: string }
  - { name: delete, type: boolean }
  - { name: query, type: string }
  - { name: queries, type: string, isList: true }

- name: QontractQuery_v1
  fields:
  - { name: path, type: string, isRequired: true, isResource: true }

- name: QueryValidation_v1
  fields:
  - { name: schema, type: string, isRequired: true }
  - { name: path, type: string, isRequired: true }
  - { name: labels, type: json }
  - { name: name, type: string, isRequired: true, isUnique: true, isSearchable: true }
  - { name: description, type: string, isRequired: true }
  - { name: escalationPolicy, type: AppEscalationPolicy_v1, isRequired: true }
  - { name: queries, type: QontractQuery_v1, isList: true, isRequired: true }
  - { name: resources, type: NamespaceOpenshiftResource_v1, isList: true, isInterface: true }

- name: UnleashNotifications_v1
  fields:
  - { name: slack, type: SlackOutput_v1, isList: true }

- name: UnleashFeatureToggle_v1
  fields:
  - { name: name, type: string, isRequired: true }
  - { name: enabled, type: boolean, isRequired: true }
  - { name: reason, type: string }

- name: UnleashInstance_v1
  datafile: /app-sre/unleash-instance-1.yml
  fields:
  - { name: schema, type: string, isRequired: true }
  - { name: path, type: string, isRequired: true }
  - { name: labels, type: json }
  - { name: name, type: string, isRequired: true }
  - { name: description, type: string, isRequired: true }
  - { name: url, type: string, isRequired: true }
  - { name: token, type: VaultSecret_v1, isRequired: true }
  - { name: notifications, type: UnleashNotifications_v1 }
  - { name: featureToggles, type: UnleashFeatureToggle_v1, isRequired: true, isList: true }

- name: GabiNamespace_v1
  fields:
  - { name: account, type: string, isRequired: true }
  - { name: identifier, type: string, isRequired: true }
  - { name: namespace, type: Namespace_v1, isRequired: true }

- name: GabiInstance_v1
  datafile: /app-sre/gabi-instance-1.yml
  fields:
  - { name: schema, type: string, isRequired: true }
  - { name: path, type: string, isRequired: true }
  - { name: labels, type: json }
  - { name: name, type: string, isRequired: true }
  - { name: description, type: string, isRequired: true }
  - { name: signoffManagers, type: User_v1, isRequired: true, isList: true }
  - { name: users, type: User_v1, isRequired: true, isList: true }
  - { name: instances, type: GabiNamespace_v1, isRequired: true, isList: true }
  - { name: expirationDate, type: string, isRequired: true }

- name: TemplateTest_v1
  fields:
  - { name: schema, type: string, isRequired: true }
  - { name: path, type: string, isRequired: true }
  - { name: labels, type: json }
  - { name: name, type: string, isRequired: true }
  - { name: description, type: string, isRequired: true }
  - { name: resourcePath, type: string, isRequired: true }
  - { name: expectedResult, type: string, isRequired: true }

- name: AcceptanceCriteriaItem_v1
  fields:
  - { name: name, type: string, isRequired: true, isUnique: true }
  - { name: status, type: string, isRequired: true }
  - { name: comment, type: string }

- name: Scorecard_v2
  datafile: /app-sre/scorecard-2.yml
  fields:
  - { name: schema, type: string, isRequired: true }
  - { name: path, type: string, isRequired: true }
  - { name: labels, type: json, isRequired: true }
  - { name: app, type: App_v1, isRequired: true }
  - { name: date, type: string, isRequired: true }
  - { name: acceptanceCriteria, type: AcceptanceCriteriaItem_v1, isRequired: true, isList: true }

- name: Query
  fields:
  - { name: app_interface_settings_v1, type: AppInterfaceSettings_v1, isList: true, datafileSchema: /app-interface/app-interface-settings-1.yml }
  - { name: app_interface_emails_v1, type: AppInterfaceEmail_v1, isList: true, datafileSchema: /app-interface/app-interface-email-1.yml }
  - { name: app_interface_slack_notifications_v1, type: AppInterfaceSlackNotification_v1,
      isList: true,
      datafileSchema: /app-interface/app-interface-slack-notification-1.yml }
  - { name: credentials_requests_v1, type: CredentialsRequest_v1, isList: true, datafileSchema: /app-interface/credentials-request-1.yml }
  - { name: users_v1, type: User_v1, isList: true, datafileSchema: /access/user-1.yml }
  - { name: external_users_v1, type: ExternalUser_v1, isList: true, datafileSchema: /access/external-user-1.yml }
  - { name: bots_v1, type: Bot_v1, isList: true, datafileSchema: /access/bot-1.yml }
  - { name: roles_v1, type: Role_v1, isList: true, datafileSchema: /access/role-1.yml }
  - { name: permissions_v1, type: Permission_v1, isList: true, isRequired: true, isInterface: true, datafileSchema: /access/permission-1.yml }
  - { name: awsgroups_v1, type: AWSGroup_v1, isList: true, datafileSchema: /aws/group-1.yml }
  - { name: awsaccounts_v1, type: AWSAccount_v1, isList: true, datafileSchema: /aws/account-1.yml }
  - { name: cloudflare_accounts_v1, type: CloudflareAccount_v1, isList: true, datafileSchema: /cloudflare/account-1.yml }
  - { name: cna_experimental_provisioners_v1, type: CNAExperimentalProvisioner_v1, isList: true, datafileSchema: /cna/experimental-provisioner-1.yml }
  - { name: clusters_v1, type: Cluster_v1, isList: true, datafileSchema: /openshift/cluster-1.yml }
  - { name: jumphosts_v1, type: ClusterJumpHost_v1, isList: true, datafileSchema: /openshift/jump-host-1.yml }
  - { name: kafka_clusters_v1, type: KafkaCluster_v1, isList: true, datafileSchema: /kafka/cluster-1.yml }
  - { name: namespaces_v1, type: Namespace_v1, isList: true, datafileSchema: /openshift/namespace-1.yml }
  - { name: gcp_projects_v1, type: GcpProject_v1, isList: true, datafileSchema: /gcp/project-1.yml }
  - { name: quay_orgs_v1, type: QuayOrg_v1, isList: true, datafileSchema: /dependencies/quay-org-1.yml }
  - { name: quay_instances_v1, type: QuayInstance_v1, isList: true, datafileSchema: /dependencies/quay-instance-1.yml }
  - { name: jenkins_instances_v1, type: JenkinsInstance_v1, isList: true, datafileSchema: /dependencies/jenkins-instance-1.yml }
  - { name: jenkins_configs_v1, type: JenkinsConfig_v1, isList: true, datafileSchema: /dependencies/jenkins-config-1.yml }
  - { name: jira_servers_v1, type: JiraServer_v1, isList: true, datafileSchema: /dependencies/jira-server-1.yml }
  - { name: jira_boards_v1, type: JiraBoard_v1, isList: true, datafileSchema: /dependencies/jira-board-1.yml }
  - { name: sendgrid_accounts_v1, type: SendGridAccount_v1, isList: true, datafileSchema: /dependencies/sendgrid-account-1.yml }
  - { name: products_v1, type: Product_v1, isList: true, datafileSchema: /app-sre/product-1.yml }
  - { name: environments_v1, type: Environment_v1, isList: true, datafileSchema: /app-sre/environment-1.yml }
  - { name: apps_v1, type: App_v1, isList: true, datafileSchema: /app-sre/app-1.yml }
  - { name: escalation_policies_1, type: AppEscalationPolicy_v1, isList: true, datafileSchema: /app-sre/escalation-policy-1.yml }
  - { name: resources_v1, type: Resource_v1, isResource: true, isRequired: true, isList: true }
  - { name: vault_instances_v1, type: VaultInstance_v1, isList: true, datafileSchema: /vault-config/instance-1.yml }
  - { name: vault_audit_backends_v1, type: VaultAudit_v1, isList: true, datafileSchema: /vault-config/audit-1.yml }
  - { name: vault_auth_backends_v1, type: VaultAuth_v1, isList: true, datafileSchema: /vault-config/auth-1.yml }
  - { name: vault_secret_engines_v1, type: VaultSecretEngine_v1, isList: true, datafileSchema: /vault-config/secret-engine-1.yml }
  - { name: vault_roles_v1, type: VaultRole_v1, isList: true, datafileSchema: /vault-config/role-1.yml }
  - { name: vault_policies_v1, type: VaultPolicy_v1, isList: true, datafileSchema: /vault-config/policy-1.yml }
  - { name: dependencies_v1, type: Dependency_v1, isList: true, datafileSchema: /dependencies/dependency-1.yml }
  - { name: githuborg_v1, type: GithubOrg_v1, isList: true, datafileSchema: /dependencies/github-org-1.yml }
  - { name: gitlabinstance_v1, type: GitlabInstance_v1, isList: true, datafileSchema: /dependencies/gitlab-instance-1.yml }
  - { name: integrations_v1, type: Integration_v1, isList: true, datafileSchema: /app-sre/integration-1.yml}
  - { name: reports_v1, type: Report_v1, isList: true, datafileSchema: /app-sre/report-1.yml}
  - { name: sre_checkpoints_v1, type: SRECheckpoint_v1, isList: true, datafileSchema: /app-sre/sre-checkpoint-1.yml}
  - { name: sentry_teams_v1, type: SentryTeam_v1, isList: true, datafileSchema: /dependencies/sentry-team-1.yml }
  - { name: sentry_instances_v1, type: SentryInstance_v1, isList: true, datafileSchema: /dependencies/sentry-instance-1.yml }
  - { name: glitchtip_instances_v1, type: GlitchtipInstance_v1, isList: true, isRequired: true, datafileSchema: /dependencies/glitchtip-instance-1.yml }
  - { name: glitchtip_organizations_v1, type: GlitchtipOrganization_v1, isList: true, isRequired: true, datafileSchema: /dependencies/glitchtip-organization-1.yml }
  - { name: glitchtip_teams_v1, type: GlitchtipTeam_v1, isList: true, isRequired: true, datafileSchema: /dependencies/glitchtip-team-1.yml }
  - { name: glitchtip_projects_v1, type: GlitchtipProjects_v1, isList: true, datafileSchema: /dependencies/glitchtip-project-1.yml }
  - { name: app_interface_sql_queries_v1, type: AppInterfaceSqlQuery_v1, isList: true, datafileSchema: /app-interface/app-interface-sql-query-1.yml }
  - { name: query_validations_v1, type: QueryValidation_v1, isList: true, datafileSchema: /app-interface/query-validation-1.yml }
  - { name: saas_files_v2, type: SaasFile_v2, isList: true, datafileSchema: /app-sre/saas-file-2.yml }
  - { name: pipelines_providers_v1, type: PipelinesProvider_v1, isList: true, isInterface: true, datafileSchema: /app-sre/pipelines-provider-1.yml }
  - { name: unleash_instances_v1, type: UnleashInstance_v1, isList: true, datafileSchema: /app-sre/unleash-instance-1.yml }
  - { name: gabi_instances_v1, type: GabiInstance_v1, isList: true, datafileSchema: /app-sre/gabi-instance-1.yml }
  - { name: template_tests_v1, type: TemplateTest_v1, isList: true, datafileSchema: /app-interface/template-test-1.yml }
  - { name: dns_zone_v1, type: DnsZone_v1, isList: true, datafileSchema: /dependencies/dns-zone-1.yml }
  - { name: cloudflare_dns_zone_v1, type: CloudflareDnsZone_v1, isList: true, datafileSchema: /cloudflare/dns-zone-1.yml }
  - { name: slack_workspaces_v1, type: SlackWorkspace_v1, isList: true, datafileSchema: /dependencies/slack-workspace-1.yml }
  - { name: ocp_release_mirror_v1, type: OcpReleaseMirror_v1, isList: true, datafileSchema: /dependencies/ocp-release-mirror-1.yml}
  - { name: slo_document_v1, type: SLODocument_v1, isList: true, datafileSchema: /app-sre/slo-document-1.yml}
  - { name: shared_resources_v1, type: SharedResources_v1, isList: true, datafileSchema: /openshift/shared-resources-1.yml }
  - { name: pagerduty_instances_v1, type: PagerDutyInstance_v1, isList: true, datafileSchema: /dependencies/pagerduty-instance-1.yml }
  - { name: ocm_instances_v1, type: OpenShiftClusterManager_v1, isList: true, datafileSchema: /openshift/openshift-cluster-manager-1.yml }
  - { name: dyn_traffic_directors_v1, type: DynTrafficDirector_v1, isList: true, datafileSchema: /dependencies/dyn-traffic-director-1.yml }
  - { name: status_page_v1, type: StatusPage_v1, isList: true, datafileSchema: /dependencies/status-page-1.yml }
  - { name: status_page_component_v1, type: StatusPageComponent_v1, isList: true, datafileSchema: /dependencies/status-page-component-1.yml }
  - { name: endpoint_monitoring_provider_v1, type: EndpointMonitoringProvider_v1, isList: true, isInterface: true, datafileSchema: /dependencies/endpoint-monitoring-provider-1.yml }
  - { name: change_types_v1, type: ChangeType_v1, isList: true, datafileSchema: /app-interface/change-type-1.yml }
  - { name: scorecards_v2, type: Scorecard_v2, isList: true, datafileSchema: /app-sre/scorecard-2.yml }
  - { name: pgp_reencrypt_settings_v1, type: PgpReencryptSettings_v1, isList: true, datafileSchema: /app-sre/pgp-reencrypt-settings-1.yml }
  - { name: skupper_network_v1, type: SkupperNetwork_v1, isList: true, datafileSchema: /dependencies/skupper-network-1.yml }

- name: GlitchtipInstance_v1
  fields:
  - { name: schema, type: string, isRequired: true }
  - { name: labels, type: json }
  - { name: name, type: string, isRequired: true, isUnique: true }
  - { name: description, type: string, isRequired: true }
  - { name: consoleUrl, type: string, isRequired: true }
  - { name: automationUserEmail, type: VaultSecret_v1, isRequired: true }
  - { name: automationToken, type: VaultSecret_v1, isRequired: true }
  - name: organizations
    type: GlitchtipOrganization_v1
    isList: true
    isRequired: true
    synthetic:
      schema: /dependencies/glitchtip-organization-1.yml
      subAttr: instance

- name: GlitchtipOrganization_v1
  fields:
  - { name: schema, type: string, isRequired: true }
  - { name: labels, type: json }
  - { name: name, type: string, isRequired: true, isUnique: true }
  - { name: description, type: string, isRequired: true }
  - { name: instance, type: GlitchtipInstance_v1, isRequired: true }
  - name: roles
    type: Role_v1
    isList: true
    isRequired: true
    synthetic:
      schema: /access/role-1.yml
      subAttr: glitchtip_roles.organization

- name: GlitchtipTeam_v1
  fields:
  - { name: schema, type: string, isRequired: true }
  - { name: labels, type: json }
  - { name: name, type: string, isRequired: true, isUnique: true }
  - { name: description, type: string, isRequired: true }
  - name: roles
    type: Role_v1
    isList: true
    isRequired: true
    synthetic:
      schema: /access/role-1.yml
      subAttr: glitchtip_teams

- name: GlitchtipRole_v1
  fields:
  - { name: role, type: string, isRequired: true }
  - { name: organization, type: GlitchtipOrganization_v1, isRequired: true, isUnique: true }

- name: GlitchtipProjects_v1
  datafile: /dependencies/glitchtip-project-1.yml
  fields:
  - { name: path, type: string, isRequired: true }
  - { name: schema, type: string, isRequired: true }
  - { name: name, type: string, isRequired: true, isUnique: true }
  - { name: description, type: string, isRequired: true }
  - { name: app, type: App_v1, isRequired: true }
  - { name: platform, type: string, isRequired: true }
  - { name: teams, type: GlitchtipTeam_v1, isRequired: true, isList: true }
  - { name: organization, type: GlitchtipOrganization_v1, isRequired: true }
  - name: namespaces
    type: Namespace_v1
    isList: true
    isRequired: true
    synthetic:
      schema: /openshift/namespace-1.yml
      subAttr: glitchtipProjects
  - name: sharedResources
    type: SharedResources_v1
    isList: true
    isRequired: true
    synthetic:
      schema: /openshift/shared-resources-1.yml
      subAttr: glitchtipProjects

- name: SentryTeam_v1
  fields:
  - { name: schema, type: string, isRequired: true }
  - { name: path, type: string, isRequired: true }
  - { name: labels, type: json }
  - { name: name, type: string, isRequired: true }
  - { name: description, type: string, isRequired: true }
  - { name: instance, type: SentryInstance_v1, isRequired: true }

- name: SentryRole_v1
  fields:
  - { name: role, type: string, isRequired: true }
  - { name: instance, type: SentryInstance_v1, isRequired: true }

- name: SentryInstance_v1
  fields:
  - { name: schema, type: string, isRequired: true }
  - { name: labels, type: json }
  - { name: name, type: string, isRequired: true }
  - { name: description, type: string, isRequired: true }
  - { name: consoleUrl, type: string, isRequired: true }
  - { name: automationToken, type: VaultSecret_v1, isRequired: true }
  - { name: adminUser, type: VaultSecret_v1, isRequired: true }

- name: SentryProjectItems_v1
  fields:
  - { name: name, type: string, isRequired: true }
  - { name: description, type: string, isRequired: true }
  - { name: email_prefix, type: string, isRequired: true }
  - { name: platform, type: string, isRequired: true }
  - { name: sensitive_fields, type: string, isRequired: false, isList: true }
  - { name: safe_fields, type: string, isRequired: false, isList: true }
  - { name: auto_resolve_age, type: int, isRequired: false }
  - { name: allowed_domains, type: string, isRequired: false, isList: true }


- name: AppSentryProjects_v1
  fields:
  - { name: team, type: SentryTeam_v1, isRequired: true }
  - { name: projects, type: SentryProjectItems_v1, isRequired: true, isList: true }

- name: SqlEmailOverrides_v1
  fields:
  - { name: db_host, type: string }
  - { name: db_port, type: string }
  - { name: db_name, type: string }
  - { name: db_user, type: string }
  - { name: db_password, type: string }

- name: DnsNamespaceZone_v1
  fields:
  - { name: namespace, type: Namespace_v1, isRequired: true }
  - { name: name, type: string, isRequired: true }

- name: DnsRecordHealthcheck_v1
  fields:
  - { name: fqdn, type: string }
  - { name: port, type: int }
  - { name: type, type: string }
  - { name: resource_path, type: string }
  - { name: failure_threshold, type: int }
  - { name: request_interval, type: int }
  - { name: search_string, type: string }

- name: DnsRecordWeightedRoutingPolicy_v1
  fields:
  - { name: weight, type: int }

- name: DnsRecordAlias_v1
  fields:
  - { name: name, type: string, isRequired: true }
  - { name: zone_id, type: string, isRequired: true }
  - { name: evaluate_target_health, type: boolean, isRequired: true }

- name: DnsRecord_v1
  fields:
  - { name: name, type: string, isRequired: true }
  - { name: type, type: string, isRequired: true}
  - { name: ttl, type: int }
  - { name: alias, type: DnsRecordAlias_v1 }
  - { name: weighted_routing_policy, type: DnsRecordWeightedRoutingPolicy_v1 }
  - { name: set_identifier, type: string }
  - { name: records, type: string, isList: true }
  - { name: _healthcheck, type: DnsRecordHealthcheck_v1 }
  - { name: _target_cluster, type: Cluster_v1 }
  - { name: _target_namespace_zone, type: DnsNamespaceZone_v1 }

- name: DnsZone_v1
  datafile: /dependencies/dns-zone-1.yml
  fields:
  - { name: schema, type: string, isRequired: true }
  - { name: path, type: string, isRequired: true }
  - { name: labels, type: json }
  - { name: name, type: string, isRequired: true }
  - { name: domain_name, type: string }
  - { name: description, type: string, isRequired: true }
  - { name: provider, type: string, isRequired: true }
  - { name: account, type: AWSAccount_v1, isRequired: true }
  - { name: vpc, type: AWSVPC_v1 }
  - { name: origin, type: string, isRequired: true }
  - { name: records, type: DnsRecord_v1, isList: true }

- name: CloudflareDnsRecordDataSettings_v1
  fields:
  - { name: algorithm, type: int }
  - { name: key_tag, type: int }
  - { name: flags, type: int }
  - { name: protocol, type: int }
  - { name: public_key, type: string }
  - { name: digest_type, type: int }
  - { name: digest, type: string }

- name: CloudflareDnsRecord_v1
  datafile: /cloudflare/dns-record-1.yml
  fields:
  - { name: schema, type: string, isRequired: true }
  - { name: path, type: string, isRequired: true }
  - { name: identifier, type: string, isRequired: true, isUnique: true}
  - { name: name, type: string, isRequired: true }
  - { name: type, type: string, isRequired: true}
  - { name: ttl, type: int, isRequired: true}
  - { name: value, type: string }
  - { name: data, type: CloudflareDnsRecordDataSettings_v1 }
  - { name: proxied, type: boolean }
  - { name: priority, type: int }


- name: CloudflareDnsZone_v1
  datafile: /cloudflare/dns-zone-1.yml
  fields:
  - { name: schema, type: string, isRequired: true }
  - { name: path, type: string, isRequired: true }
  - { name: identifier, type: string, isRequired: true, isUnique: true}
  - { name: account, type: CloudflareAccount_v1, isRequired: true }
  - { name: zone, type: string, isRequired: true }
  - { name: type, type: string }
  - { name: plan, type: string }
  - { name: records, type: CloudflareDnsRecord_v1, isList: true }
  - { name: delete, type: boolean }

- name: SLODocumentSLOSLOParameters_v1
  fields:
  - { name: window, type: string, isRequired: true }

- name: SLODocumentSLO_v1
  fields:
  - { name: name, type: string, isRequired: true }
  - { name: SLIType, type: string, isRequired: true }
  - { name: SLISpecification, type: string, isRequired: true }
  - { name: SLODetails, type: string, isRequired: true }
  - { name: SLOTarget, type: float, isRequired: true }
  - { name: SLOParameters, type: SLODocumentSLOSLOParameters_v1, isRequired: true }
  - { name: expr, type: string, isRequired: true }
  - { name: SLOTargetUnit, type: string, isRequired: true }
  - { name: prometheusRules, type: string, isRequired: true }
  - { name: prometheusRulesTests, type: string }
  - { name: dashboard, type: string, isRequired: true }

- name: SLODocument_v1
  datafile: /app-sre/slo-document-1.yml
  fields:
  - { name: schema, type: string, isRequired: true }
  - { name: path, type: string, isRequired: true }
  - { name: labels, type: json }
  - { name: name, type: string, isRequired: true }
  - { name: app, type: App_v1, isRequired: true }
  - { name: namespaces, type: Namespace_v1, isList: true, isRequired: true }
  - { name: slos, type: SLODocumentSLO_v1, isList: true }

- name: DynTrafficDirectorRecord_v1
  fields:
  - { name: hostname, type: string }
  - { name: cluster, type: Cluster_v1 }
  - { name: weight, type: int, isRequired: true }

- name: DynTrafficDirector_v1
  fields:
  - { name: name, type: string, isRequired: true, isUnique: true }
  - { name: ttl, type: int }
  - { name: records, type: DynTrafficDirectorRecord_v1, isRequired: true, isList: true }

- name: StatusPage_v1
  fields:
  - { name: schema, type: string, isRequired: true }
  - { name: path, type: string, isRequired: true }
  - { name: labels, type: json }
  - { name: name, type: string, isRequired: true, isUnique: true }
  - { name: description, type: string, isRequired: true }
  - { name: url, type: string }
  - { name: provider, type: string, isRequired: true }
  - { name: apiUrl, type: string, isRequired: true }
  - { name: credentials, type: VaultSecret_v1, isRequired: true }
  - { name: pageId, type: string, isRequired: true, isUnique: true }
  - name: components
    type: StatusPageComponent_v1
    isList: true
    synthetic:
      schema: /dependencies/status-page-component-1.yml
      subAttr: page

- name: StatusPageComponent_v1
  datafile: /dependencies/status-page-component-1.yml
  fields:
  - { name: schema, type: string, isRequired: true }
  - { name: path, type: string, isRequired: true }
  - { name: labels, type: json }
  - { name: name, type: string, isRequired: true, isUnique: true }
  - { name: app, type: App_v1, isRequired: true }
  - { name: displayName, type: string, isRequired: true }
  - { name: description, type: string }
  - { name: instructions, type: string, isRequired: true }
  - { name: page, type: StatusPage_v1, isRequired: true }
  - { name: groupName, type: string }
  - { name: status, type: StatusProvider_v1, isList: true, isInterface: true }

- name: EndpointMonitoringProvider_v1
  isInterface: true
  interfaceResolve:
    strategy: fieldMap
    field: provider
    fieldMap:
      blackbox-exporter: EndpointMonitoringProviderBlackboxExporter_v1
      signalfx: EndpointMonitoringProviderSignalFx_v1
  fields:
  - { name: schema, type: string, isRequired: true }
  - { name: path, type: string, isRequired: true }
  - { name: labels, type: json }
  - { name: name, type: string, isRequired: true, isUnique: true }
  - { name: description, type: string, isRequired: true }
  - { name: provider, type: string, isRequired: true }
  - { name: metricLabels, type: json }
  - { name: timeout, type: string }
  - { name: checkInterval, type: string }

- name: EndpointMonitoringProviderBlackboxExporter_v1
  interface: EndpointMonitoringProvider_v1
  fields:
  - { name: schema, type: string, isRequired: true }
  - { name: path, type: string, isRequired: true }
  - { name: labels, type: json }
  - { name: name, type: string, isRequired: true, isUnique: true }
  - { name: description, type: string, isRequired: true }
  - { name: provider, type: string, isRequired: true }
  - { name: metricLabels, type: json }
  - { name: timeout, type: string }
  - { name: checkInterval, type: string }
  - { name: blackboxExporter, type: EndpointMonitoringProviderBlackboxExporterSettings_v1, isRequired: true }

- name: EndpointMonitoringProviderBlackboxExporterSettings_v1
  fields:
  - { name: module, type: string, isRequired: true }
  - { name: namespace, type: Namespace_v1, isRequired: true }
  - { name: exporterUrl, type: string, isRequired: true }

- name: EndpointMonitoringProviderSignalFx_v1
  interface: EndpointMonitoringProvider_v1
  fields:
  - { name: schema, type: string, isRequired: true }
  - { name: path, type: string, isRequired: true }
  - { name: labels, type: json }
  - { name: name, type: string, isRequired: true, isUnique: true }
  - { name: description, type: string, isRequired: true }
  - { name: provider, type: string, isRequired: true }
  - { name: metricLabels, type: json }
  - { name: timeout, type: string }
  - { name: checkInterval, type: string }
  - { name: signalFx, type: EndpointMonitoringProviderSignalFxSettings_v1, isRequired: true }

- name: EndpointMonitoringProviderSignalFxSettings_v1
  fields:
  - { name: namespace, type: Namespace_v1, isRequired: true }
  - { name: exporterUrl, type: string, isRequired: true }
  - { name: targetFilterLabel, type: string, isRequired: true }

- name: StatusProvider_v1
  isInterface: true
  interfaceResolve:
    strategy: fieldMap
    field: provider
    fieldMap:
      prometheus-alerts: PrometheusAlertsStatusProvider_v1
      manual: ManualStatusProvider_v1
  fields:
  - { name: provider, type: string, isRequired: true }

- name: PrometheusAlertsStatusProvider_v1
  interface: StatusProvider_v1
  fields:
  - { name: provider, type: string, isRequired: true }
  - { name: prometheusAlerts, type: PrometheusAlertsStatusProviderConfig_v1, isRequired: true }

- name: PrometheusAlertsStatusProviderConfig_v1
  fields:
  - { name: namespace, type: Namespace_v1, isList: true }
  - { name: matchers, type: PrometheusAlertMatcher_v1, isList: true }

- name: PrometheusAlertMatcher_v1
  fields:
  - { name: matchExpression, type: PrometheusAlertMatcherExpression_v1, isRequired: true }
  - { name: componentStatus, type: string, isRequired: true }

- name: PrometheusAlertMatcherExpression_v1
  fields:
  - { name: alert, type: string }
  - { name: labels, type: json }

- name: ManualStatusProvider_v1
  interface: StatusProvider_v1
  fields:
  - { name: provider, type: string, isRequired: true }
  - { name: manual, type: ManualStatusProviderConfig_v1, isRequired: true }

- name: ManualStatusProviderConfig_v1
  fields:
  - { name: componentStatus, type: string, isRequired: true }
  - { name: from, type: string }
  - { name: until, type: string }

- name: ChangeType_v1
  fields:
  - { name: schema, type: string, isRequired: true }
  - { name: path, type: string, isRequired: true }
  - { name: labels, type: json }
  - { name: name, type: string, isRequired: true, isUnique: true, isSearchable: true }
  - { name: description, type: string, isRequired: true }
  - { name: priority, type: string, isRequired: true }
  - { name: contextType, type: string, isRequired: true } # datafile or resource
  - { name: contextSchema, type: string } # schema of a datafile or resource
  - { name: disabled, type: boolean }
  - { name: inherit, type: ChangeType_v1, isList: true }
  - { name: changes, type: ChangeTypeChangeDetector_v1, isInterface: true, isRequired: true, isList: true }
  - { name: implicitOwnership, type: ChangeTypeImplicitOwnership_v1, isInterface: true, isList: true }

- name: ChangeTypeImplicitOwnership_v1
  isInterface: true
  interfaceResolve:
    strategy: fieldMap
    field: provider
    fieldMap:
      jsonPath: ChangeTypeImplicitOwnershipJsonPathProvider_v1
  fields:
  - { name: provider, type: string, isRequired: true }

- name: ChangeTypeImplicitOwnershipJsonPathProvider_v1
  interface: ChangeTypeImplicitOwnership_v1
  fields:
  - { name: provider, type: string, isRequired: true }
  - { name: jsonPathSelector, type: string, isRequired: true }

- name: ChangeTypeChangeDetector_v1
  isInterface: true
  interfaceResolve:
    strategy: fieldMap
    field: provider
    fieldMap:
      jsonPath: ChangeTypeChangeDetectorJsonPathProvider_v1
      change-type: ChangeTypeChangeDetectorChangeTypeProvider_v1
  fields:
  - { name: provider, type: string, isRequired: true }
  - { name: changeSchema, type: string }
  - { name: context, type: ChangeTypeChangeDetectorContextSelector_v1 }

- name: ChangeTypeChangeDetectorJsonPathProvider_v1
  interface: ChangeTypeChangeDetector_v1
  fields:
  - { name: provider, type: string, isRequired: true }
  - { name: changeSchema, type: string }
  - { name: jsonPathSelectors, type: string, isList: true, isRequired: true }
  - { name: context, type: ChangeTypeChangeDetectorContextSelector_v1 }

- name: ChangeTypeChangeDetectorChangeTypeProvider_v1
  interface: ChangeTypeChangeDetector_v1
  fields:
  - { name: provider, type: string, isRequired: true }
  - { name: changeSchema, type: string }
  - { name: changeTypes, type: ChangeType_v1, isList: true, isRequired: true }
  - { name: context, type: ChangeTypeChangeDetectorContextSelector_v1, isRequired: true }

- name: ChangeTypeChangeDetectorContextSelector_v1
  fields:
  - { name: selector, type: string, isRequired: true }
  - { name: when, type: "string" }

- name: RosaOcmSpec_v1
  fields:
  - { name: ocm_environments, type: RosaOcmAwsSpec_v1, isList: true}

- name: RosaOcmAwsSpec_v1
  fields:
  - { name: ocm, type: OpenShiftClusterManager_v1, isRequired: true}
  - { name: creator_role_arn, type: string, isRequired: true}
  - { name: installer_role_arn, type: string, isRequired: true}
  - { name: support_role_arn, type: string, isRequired: true}
  - { name: controlplane_role_arn, type: string, isRequired: true}
  - { name: worker_role_arn, type: string, isRequired: true}


- name: PgpReencryptSettings_v1
  fields:
  - { name: schema, type: string, isRequired: true }
  - { name: public_gpg_key, type: string, isRequired: true }
  - { name: private_pgp_key_vault_path, type: string, isRequired: true }
  - { name: reencrypt_vault_path, type: string, isRequired: true }
  - { name: aws_account_output_vault_path, type: string, isRequired: true }
  - { name: skip_aws_accounts, type: AWSAccount_v1, isList: true }

- name: SkupperNetwork_v1
  datafile: /dependencies/skupper-network-1.yml
  fields:
  - { name: schema, type: string, isRequired: true }
  - { name: identifier, type: string, isRequired: true, isUnique: true }
  - { name: siteConfigDefaults, type: SkupperSiteConfigDefaults_v1, isRequired: true }
  - { name: path, type: string, isRequired: true }
  - name: namespaces
    type: Namespace_v1
    isRequired: true
    isList: true
    synthetic:
      schema: /openshift/namespace-1.yml
      subAttr: skupperSite.network

- name: SkupperSiteConfigDefaults_v1
  fields:
  - { name: clusterLocal, type: boolean }
  - { name: console, type: boolean }
  - { name: consoleAuthentication, type: string }
  - { name: consoleIngress, type: string }
  - { name: controllerCpuLimit, type: string }
  - { name: controllerCpu, type: string }
  - { name: controllerMemoryLimit, type: string }
  - { name: controllerMemory, type: string }
  - { name: controllerPodAntiaffinity, type: string }
  - { name: controllerServiceAnnotations, type: string }
  - { name: edge, type: boolean }
  - { name: ingress, type: string }
  - { name: routerConsole, type: boolean }
  - { name: routerCpuLimit, type: string }
  - { name: routerCpu, type: string }
  - { name: routerMemoryLimit, type: string }
  - { name: routerMemory, type: string }
  - { name: routerLogging, type: string }
  - { name: routerPodAntiaffinity, type: string }
  - { name: routerServiceAnnotations, type: string }
  - { name: routers, type: int }
  - { name: serviceController, type: boolean }
  - { name: serviceSync, type: boolean }
  - { name: skupperSiteController, type: string, isRequired: true }

- name: SkupperSiteConfig_v1
  fields:
  - { name: clusterLocal, type: boolean }
  - { name: console, type: boolean }
  - { name: consoleAuthentication, type: string }
  - { name: consoleIngress, type: string }
  - { name: controllerCpuLimit, type: string }
  - { name: controllerCpu, type: string }
  - { name: controllerMemoryLimit, type: string }
  - { name: controllerMemory, type: string }
  - { name: controllerPodAntiaffinity, type: string }
  - { name: controllerServiceAnnotations, type: string }
  - { name: edge, type: boolean }
  - { name: ingress, type: string }
  - { name: routerConsole, type: boolean }
  - { name: routerCpuLimit, type: string }
  - { name: routerCpu, type: string }
  - { name: routerMemoryLimit, type: string }
  - { name: routerMemory, type: string }
  - { name: routerLogging, type: string }
  - { name: routerPodAntiaffinity, type: string }
  - { name: routerServiceAnnotations, type: string }
  - { name: routers, type: int }
  - { name: serviceController, type: boolean }
  - { name: serviceSync, type: boolean }

- name: NamespaceSkupperSiteConfig_v1
  fields:
  - { name: network, type: SkupperNetwork_v1, isRequired: true }
  - { name: delete, type: boolean }
  - { name: config, type: SkupperSiteConfig_v1 }
