---
"$schema": /metaschema-1.json
version: '1.0'
type: object

additionalProperties: false
properties:
  "$schema":
    type: string
    enum:
    - /openshift/namespace-1.yml

  labels:
    "$ref": "/common-1.json#/definitions/labels"

  name:
    type: string

  delete:
    type: boolean

  description:
    type: string

  grafanaUrl:
    type: string
    format: uri

  cluster:
    "$ref": "/common-1.json#/definitions/crossref"
    "$schemaRef": "/openshift/cluster-1.yml"

  app:
    "$ref": "/common-1.json#/definitions/crossref"
    "$schemaRef": "/app-sre/app-1.yml"

  environment:
    "$ref": "/common-1.json#/definitions/crossref"
    "$schemaRef": "/app-sre/environment-1.yml"

  limitRanges:
    "$ref": "/common-1.json#/definitions/crossref"
    "$schemaRef": "/openshift/limitrange-1.yml"

  quota:
    "$ref": "/common-1.json#/definitions/crossref"
    "$schemaRef": "/openshift/quota-1.yml"

  networkPoliciesAllow:
    type: array
    items:
      "$ref": "/common-1.json#/definitions/crossref"
      "$schemaRef": "/openshift/namespace-1.yml"

  clusterAdmin:
    type: boolean

  managedRoles:
    type: boolean

  managedResourceTypes:
    type: array
    items:
      type: string
      pattern: "[^Task|^Pipeline].+"

  managedResourceTypeOverrides:
    type: array
    items:
      type: object
      properties:
        resource:
          type: string
        override:
          type: string

  managedResourceNames:
    type: array
    items:
      type: object
      properties:
        resource:
          type: string
        resourceNames:
          type: array
          items:
            type: string

  sharedResources:
    type: array
    items:
      "$ref": "/common-1.json#/definitions/crossref"
      "$schemaRef": "/openshift/shared-resources-1.yml"

  skupper_site:
    type: object
    additionalProperties: false
    properties:
      network:
        "$ref": "/common-1.json#/definitions/crossref"
        "$schemaRef": "/dependencies/skupper-network-1.yml"
      delete:
        type: boolean
      config:
        type: object
        additionalProperties: false
        properties:
          # Set up Skupper to only accept connections from within the local cluster. default=false
          cluster-local:
            type: boolean
          # Enable Skupper console. default=true
          console:
            type: boolean
          # Skupper console authentication method. default=openshift
          console-authentication:
            type: string
            enum:
            - openshift
          # Determines if/how console is exposed outside cluster. default=route
          console-ingress:
            type: string
            enum:
            - route
            - loadbalancer
            - none
          # CPU limit for service-controller pods. default=500m
          controller-cpu-limit:
            type: string
          # CPU request for service-controller pods. default=500m
          controller-cpu:
            type: string
          # Memory limit for controller pods. default=128Mi
          controller-memory-limit:
            type: string
          # Memory request for controller pods. default=128Mi
          controller-memory:
            type: string
          # Pod antiaffinity label matches to control placement of controller pods. default='skupper.io/component=controller'
          controller-pod-antiaffinity:
            type: string
          # Annotations to add to Skupper controller service. default=unset
          controller-service-annotations:
            type: string
          # Set up an edge Skupper site. default=true for internal clusters
          edge:
            type: boolean
          #  Skupper ingress specific type. default=route
          ingress:
            type: string
            enum:
            - route
            - loadbalancer
            - ingress
            - none
          # A name for the site. default={{ resource.namespace.cluster.name }}-{{ identifier }}
          name:
            type: string
          # Set up a Dispatch Router console (not recommended). default=false
          router-console:
            type: boolean
          # CPU limit for router pods. default=500m
          router-cpu-limit:
            type: string
          # CPU request for router pods. default=500m
          router-cpu:
            type: string
          # Logging settings for router (e.g. trace,debug,info,notice,warning,error). default=error
          router-logging:
            type: string
            enum:
            - trace
            - debug
            - info
            - notice
            - warning
            - error
          # Memory limit for router pods. default=156Mi
          router-memory-limit:
            type: string
          # Memory request for router pods. default=156Mi
          router-memory:
            type: string
          # Pod antiaffinity label matches to control placement of router pods. defaukt='skupper.io/component=router'
          router-pod-antiaffinity:
            type: string
          # Annotations to add to Skupper router service. default=unset
          router-service-annotations:
            type: string
          # Number of router replicas to start. default=3
          routers:
            type: integer
          # Run the service controller. default=true
          service-controller:
            type: boolean
          # Determine if the service controller participates in service synchronization. default=true
          service-sync:
            type: boolean

  openshiftResources:
    type: array
    items:
      "$ref": "/openshift/openshift-resource-1.yml"

  managedExternalResources:
    type: boolean
    description: are external resources managed for this namespace

  externalResources:
    type: array
    description: external resources to provision for this namespace
    items:
      "$ref": "/openshift/external-resource-1.yml"

  openshiftServiceAccountTokens:
    type: array
    items:
      type: object
      properties:
        name:
          type: string
        namespace:
          "$ref": "/common-1.json#/definitions/crossref"
          "$schemaRef": "/openshift/namespace-1.yml"
        serviceAccountName:
          type: string
      required:
      - namespace
      - serviceAccountName

  glitchtipProjects:
    type: array
    items:
      "$ref": "/common-1.json#/definitions/crossref"
      "$schemaRef": "/dependencies/glitchtip-project-1.yml"

  kafkaCluster:
    "$ref": "/common-1.json#/definitions/crossref"
    "$schemaRef": "/kafka/cluster-1.yml"

dependencies:
  externalResources:
    properties:
      managedExternalResources:
        enum:
        - true
    required:
    - managedExternalResources

required:
- "$schema"
- labels
- name
- description
- cluster
- app
- environment
